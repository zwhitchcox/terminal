{
    "Unix": {
        "Directories": [
            {
                "challenge": "List all files and directories in your current directory",
                "check": "\\s*ls\\s*",
                "module": "Directories",
                "output": "Gruntfile.js\t\tconfig\t\t\tpackage.json\nLICENSE\t\t\texec\t\t\tpackages\nProcfile\t\tgulpfile.js\t\tserver.coffee\nREADME.md\t\tkarma.conf.js\t\tserver.js\nbower.json\t\tmean.json\t\ttools\nbower_components\tnode_modules",
                "sample": "ls",
                "subject": "Unix"
            },
            {
                "challenge": "List all files/directories in your current directory including those whose names begin with a dot",
                "check": "\\s*ls\\s+-a\\s*",
                "module": "Directories",
                "output": ".                       .jshintrc               gulpfile.js\n..                      .slugignore             karma.conf.js\n.DS_Store               .travis.yml             mean.json\n.bower-cache            Gruntfile.js            node_modules\n.bower-registry         LICENSE                 package.json\n.bower-tmp              Procfile                packages\n.bowerrc                README.md               server.coffee\n.csslintrc              bower.json              server.js\n.git                    bower_components        tools\n.gitignore              config\n.jshintignore           exec",
                "sample": "ls -a",
                "subject": "Unix"
            },
            {
                "challenge": "Make a directory called \"unix\" in your current directory",
                "check": "\\s*mkdir\\s+unix\\s*",
                "module": "Directories",
                "output": "Directory created (not actually output)",
                "sample": "mkdir unix",
                "subject": "Unix"
            },
            {
                "challenge": "Change to the directory called \"unix\", which is in your present working directory",
                "check": "\\s*cd\\s+unix\\s*",
                "module": "Directories",
                "output": "Directory changed! (not actually output)",
                "sample": "cd unix",
                "subject": "Unix"
            },
            {
                "challenge": "Change to your parent directory",
                "check": "\\s*cd\\s+\\.\\.\\s*",
                "module": "Directories",
                "output": "Success! (not actually output)",
                "sample": "cd ..",
                "subject": "Unix"
            },
            {
                "challenge": "Output the path of your current working directory",
                "check": "\\s*pwd\\s*",
                "module": "Directories",
                "output": "/Users/lex/Developer",
                "sample": "pwd",
                "subject": "Unix"
            },
            {
                "challenge": "List the contents of the directory unix",
                "check": "\\s*ls\\s+unix\\s*",
                "module": "Directories",
                "output": "README.md       draw            index.html      jokes.js         tts.js\nbundle.js       images          index.js        manifest.json",
                "sample": "ls unix",
                "subject": "Unix"
            },
            {
                "challenge": "List the contents of the unix/mean directory",
                "check": "\\s*ls\\s+unix\\/mean\\s*",
                "module": "Directories",
                "output": "Gruntfile.js            bower_components        package.json\nLICENSE                 config                  packages\nProcfile                karma.conf.js           server.js\nREADME.md               mean.json               tools\nbower.json              node_modules",
                "sample": "ls unix/mean",
                "subject": "Unix"
            },
            {
                "challenge": "Change to your home directory",
                "check": "\\s*cd\\s*~\\s*",
                "module": "Directories",
                "output": "Changed to home directory! (not actually output)",
                "sample": "cd ~",
                "subject": "Unix"
            },
            {
                "challenge": "List all files and directories in current directory ending with 'list'",
                "check": "\\s*ls\\s+\\*list\\s*",
                "module": "Directories",
                "output": "biglist\tlist\tnewlist\tnlist",
                "sample": "ls *list",
                "subject": "Unix"
            },
            {
                "challenge": "List all files/directories with one character and then 'ouse' as the name",
                "check": "\\s*ls\\s+\\?ouse\\s*",
                "module": "Directories",
                "output": "house\tmouse",
                "sample": "ls ?ouse",
                "subject": "Unix"
            },
            {
                "challenge": "change to the home directory of the user 'patrick'",
                "check": "\\s*cd\\s+~patrick\\s*",
                "module": "Directories",
                "output": "(changed to /Users/patrick)",
                "sample": "cd ~patrick",
                "subject": "Unix"
            },
            {
                "challenge": "Change to your root directory",
                "check": "\\s*cd\\s+\\/\\s*",
                "module": "Directories",
                "output": "(changed to root directory)",
                "sample": "cd /",
                "subject": "Unix"
            },
            {
                "challenge": "Make the directory and all the required parent directories for /user/local/bin",
                "check": "\\s*mkdir\\s+-p\\s+\\/user\\/local\\/bin\\s*",
                "module": "Directories",
                "output": "(/user/local/bin created)",
                "sample": "mkdir -p /user/local/bin",
                "subject": "Unix"
            },
            {
                "challenge": "Remove the directory 'myfiles'",
                "check": "\\s*rmdir\\s+myfiles\\s*",
                "module": "Directories",
                "output": "directory 'myfiles' removed",
                "sample": "rmdir myfiles",
                "subject": "Unix"
            }
        ],
        "Files": [
            {
                "challenge": "Copy /vol/myfile.txt to your current directory, keeping the same name",
                "check": "\\s*cp\\s+\\/vol\\/myfile\\.txt\\s+\\.\\s*",
                "module": "Files",
                "output": "File copied. (this is not actually output)",
                "sample": "cp /vol/myfile.txt .",
                "subject": "Unix"
            },
            {
                "challenge": "Move 'example.txt' (in your current directory) to the 'test' directory (in your current directory), keeping the same name",
                "check": "\\s*mv\\s+example\\.txt\\s+test\\s*",
                "module": "Files",
                "output": "File moved! (not actually output)",
                "sample": "mv example.txt test",
                "subject": "Unix"
            },
            {
                "challenge": "Make a copy of 'test.txt' and called 'test2.txt'",
                "check": "\\s*cp\\s+test\\.txt\\s+test2\\.txt\\s*",
                "module": "Files",
                "output": "File copied! (not actually output)",
                "sample": "cp test.txt test2.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Remove the file 'test.txt'",
                "check": "\\s*rm\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "test.txt removed! (not actually output)",
                "sample": "rm test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output the entire file 'test.txt'",
                "check": "\\s*cat\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "'use strict';\n\nvar del = require('del'),\n    path = require('path'),\n    gulp = require('gulp'),\n    gutil = require('gulp-util'),\n    through = require('through'),\n    gulpLoadPlugins = require('gulp-load-plugins'),\n    karma = require('karma').server,\n    plugins = gulpLoadPlugins(),\n    paths = {\n      js: ['*.js', 'test/**/*.js', '!test/coverage/**', '!bower_components/**', 'packages/**/*.js', '!packages/**/node_modules/**', '!packages/contrib/**/*.js', '!packages/contrib/**/node_modules/**'],\n      html: ['packages/**/public/**/views/**', 'packages/**/server/views/**'],\n      css: ['!bower_components/**', 'packages/**/public/**/css/*.css', '!packages/contrib/**/public/**/css/*.css'],\n      less: ['**/public/**/css/*.less'],\n      coffee: ['packages/**/public/**/*.coffee','*.coffee'],\n      coffees: ['packages/**/server/**/*.coffee']\n    },\n    assets = require('./config/assets.json'),\n    _ = require('lodash'),\n    coffee = require('gulp-coffee')\n\nfunction count(taskName, message) {\n  var fileCount = 0;\n\n  function countFiles(file) {\n    fileCount++; // jshint ignore:line\n  }\n\n  function endStream() {\n    gutil.log(gutil.colors.cyan(taskName + ': ') + fileCount + ' ' + message || 'files processed.');\n    this.emit('end'); // jshint ignore:line\n  }\n\n  return through(countFiles, endStream);\n}\n\nfunction tokenizeConfig(config) {\n  var destTokens = _.keys(config)[0].split('/');\n\n  return {\n    srcGlob: _.flatten(_.values(config)),\n    destDir: destTokens[destTokens.length - 2],\n    destFile: destTokens[destTokens.length - 1]\n  };\n}\n\ngulp.task('csslint', function () {\n  return gulp.src(paths.css)\n    .pipe(plugins.csslint('.csslintrc'))\n    .pipe(plugins.csslint.reporter())\n    .pipe(count('csslint', 'files lint free'));\n});\n\ngulp.task('cssmin', function () {\n  var config = tokenizeConfig(assets.core.css);\n\n  if (config.srcGlob.length) {\n    return gulp.src(config.srcGlob)\n      .pipe(plugins.cssmin({keepBreaks: true}))\n      .pipe(plugins.concat(config.destFile))\n      .pipe(gulp.dest(path.join('bower_components/build', config.destDir)));\n  }\n});\n\ngulp.task('less', function() {\n  return gulp.src(paths.less)\n    .pipe(plugins.less())\n    .pipe(gulp.dest(function (vinylFile) {\n      return vinylFile.cwd;\n    }));\n});\n\n\ngulp.task('uglify', function () {\n  var config = tokenizeConfig(assets.core.js);\n\n  if (config.srcGlob.length) {\n    return gulp.src(config.srcGlob)\n      .pipe(plugins.concat(config.destFile))\n      .pipe(plugins.uglify({mangle: false}))\n      .pipe(gulp.dest(path.join('bower_components/build', config.destDir)));\n  }\n});\ngulp.task('coffee', function() {\n  gulp.src(paths.coffee)\n    .pipe(coffee({bare: true}).on('error', gutil.log))\n    .pipe(gulp.dest('./packages'))\n});\n\ngulp.task('env:test', function () {\n  process.env.NODE_ENV = 'test';\n});\n\ngulp.task('env:develop', function () {\n  process.env.NODE_ENV = 'development';\n});\n\ngulp.task('env:production', function () {\n  process.env.NODE_ENV = 'production';\n});\n\ngulp.task('karma:unit', function (done) {\n  karma.start({\n    configFile: __dirname + '/karma.conf.js',\n    singleRun: true\n  }, done);\n});\n\ngulp.task('loadTestSchema', function () {\n  require('server.js');\n  require('meanio/lib/util').preload(__dirname + '/packages/**/server', 'model');\n});\n\ngulp.task('mochaTest', ['loadTestSchema'], function () {\n  return gulp.src('packages/**/server/tests/**/*.js', {read: false})\n    .pipe(plugins.mocha({\n      reporter: 'spec'\n    }));\n});\n\ngulp.task('watch', function () {\n  gulp.watch(paths.coffee,['coffee']).on('change', plugins.livereload.changed);\n  gulp.watch(paths.coffees).on('change',plugins.livereload.changed);\n  gulp.watch(paths.js).on('change', plugins.livereload.changed);\n  gulp.watch(paths.html).on('change', plugins.livereload.changed);\n  gulp.watch(paths.css, ['csslint']).on('change', plugins.livereload.changed);\n  gulp.watch(paths.less, ['less']).on('change', plugins.livereload.changed);\n\n  plugins.livereload.listen({interval: 500});\n});\n\n// https://github.com/gulpjs/gulp/blob/master/docs/recipes/delete-files-folder.md\ngulp.task('clean', function (cb) {\n  return del(['bower_components/build'], cb);\n});\n\ngulp.task('develop', ['env:develop'], function () {\n  plugins.nodemon({\n    script: 'server.coffee',\n    ext: 'html js coffee',\n    env: { 'NODE_ENV': 'development' } ,\n    ignore: ['./node_modules/**']\n  });\n});\n\ngulp.task('test', ['env:test', 'karma:unit', 'mochaTest']);\n\nvar defaultTasks = ['coffee','clean', 'develop', 'watch'];\n\nif (process.env.NODE_ENV === 'production') {\n  defaultTasks = ['clean', 'cssmin', 'uglify'];\n}\n\ngulp.task('default', defaultTasks);\n\n// See also: https://github.com/timdp/heroku-buildpack-nodejs-gulp\n// For Heroku users only.\n// Docs: https://github.com/linnovate/mean/wiki/Deploying-on-Heroku\ngulp.task('heroku:production', ['env:production', 'cssmin', 'uglify']);",
                "sample": "cat test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output the file 'test.txt' one page at a time",
                "check": "\\s*less\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "Contents will be output one page at a time. You can use the space bar to advance pages and 'q' to cease output.",
                "sample": "less test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output the first ten lines of 'test.txt'",
                "check": "\\s*head\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "'use strict';\n\nvar del = require('del'),\n    path = require('path'),\n    gulp = require('gulp'),\n    gutil = require('gulp-util'),\n    through = require('through'),\n    gulpLoadPlugins = require('gulp-load-plugins'),\n    karma = require('karma').server,\n    plugins = gulpLoadPlugins(),",
                "sample": "head test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output the first 5 lines of test.txt",
                "check": "\\s*head\\s+-5\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "'use strict';\n\nvar del = require('del'),\n    path = require('path'),\n    gulp = require('gulp'),",
                "sample": "head -5 test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output the last ten lines of file.txt",
                "check": "\\s*tail\\s+file\\.txt",
                "module": "Files",
                "output": "if (process.env.NODE_ENV === 'production') {\n  defaultTasks = ['clean', 'cssmin', 'uglify'];\n}\n\ngulp.task('default', defaultTasks);\n\n// See also: https://github.com/timdp/heroku-buildpack-nodejs-gulp\n// For Heroku users only.\n// Docs: https://github.com/linnovate/mean/wiki/Deploying-on-Heroku\ngulp.task('heroku:production', ['env:production', 'cssmin', 'uglify']);",
                "sample": "tail file.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output all lines containing the word 'gulp' in test.txt",
                "check": "\\s*grep\\s+gulp\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "gulp = require('gulp'),\n    gutil = require('gulp-util'),\n    gulpLoadPlugins = require('gulp-load-plugins'),\n    plugins = gulpLoadPlugins(),\n    coffee = require('gulp-coffee')\ngulp.task('csslint', function () {\n  return gulp.src(paths.css)\ngulp.task('cssmin', function () {\n    return gulp.src(config.srcGlob)\n      .pipe(gulp.dest(path.join('bower_components/build', config.destDir)));\ngulp.task('less', function() {\n  return gulp.src(paths.less)\n    .pipe(gulp.dest(function (vinylFile) {\ngulp.task('uglify', function () {\n    return gulp.src(config.srcGlob)\n      .pipe(gulp.dest(path.join('bower_components/build', config.destDir)));\ngulp.task('coffee', function() {\n  gulp.src(paths.coffee)\n    .pipe(gulp.dest('./packages'))\ngulp.task('env:test', function () {\ngulp.task('env:develop', function () {\ngulp.task('env:production', function () {\ngulp.task('karma:unit', function (done) {\ngulp.task('loadTestSchema', function () {\ngulp.task('mochaTest', ['loadTestSchema'], function () {\n  return gulp.src('packages/**/server/tests/**/*.js', {read: false})\ngulp.task('watch', function () {\n  gulp.watch(paths.coffee,['coffee']).on('change', plugins.livereload.changed);\n  gulp.watch(paths.coffees).on('change',plugins.livereload.changed);\n  gulp.watch(paths.js).on('change', plugins.livereload.changed);\n  gulp.watch(paths.html).on('change', plugins.livereload.changed);\n  gulp.watch(paths.css, ['csslint']).on('change', plugins.livereload.changed);\n  gulp.watch(paths.less, ['less']).on('change', plugins.livereload.changed);\n// https://github.com/gulpjs/gulp/blob/master/docs/recipes/delete-files-folder.md\ngulp.task('clean', function (cb) {\ngulp.task('develop', ['env:develop'], function () {\ngulp.task('test', ['env:test', 'karma:unit', 'mochaTest']);\ngulp.task('default', defaultTasks);\n// See also: https://github.com/timdp/heroku-buildpack-nodejs-gulp\ngulp.task('heroku:production', ['env:production', 'cssmin', 'uglify']);",
                "sample": "grep gulp test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output all lines containing the word 'gulp' case insensitively in test.txt",
                "check": "\\s*grep\\s+-i\\s+gulp\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "gulp = require('gulp'),\n    gutil = require('gulp-util'),\n    gulpLoadPlugins = require('gulp-load-plugins'),\n    plugins = gulpLoadPlugins(),\n    coffee = require('gulp-coffee')\ngulp.task('csslint', function () {\n  return gulp.src(paths.css)\ngulp.task('cssmin', function () {\n    return gulp.src(config.srcGlob)\n      .pipe(gulp.dest(path.join('bower_components/build', config.destDir)));\ngulp.task('less', function() {\n  return gulp.src(paths.less)\n    .pipe(gulp.dest(function (vinylFile) {\ngulp.task('uglify', function () {\n    return gulp.src(config.srcGlob)\n      .pipe(gulp.dest(path.join('bower_components/build', config.destDir)));\ngulp.task('coffee', function() {\n  gulp.src(paths.coffee)\n    .pipe(gulp.dest('./packages'))\ngulp.task('env:test', function () {\ngulp.task('env:develop', function () {\ngulp.task('env:production', function () {\ngulp.task('karma:unit', function (done) {\ngulp.task('loadTestSchema', function () {\ngulp.task('mochaTest', ['loadTestSchema'], function () {\n  return gulp.src('packages/**/server/tests/**/*.js', {read: false})\ngulp.task('watch', function () {\n  gulp.watch(paths.coffee,['coffee']).on('change', plugins.livereload.changed);\n  gulp.watch(paths.coffees).on('change',plugins.livereload.changed);\n  gulp.watch(paths.js).on('change', plugins.livereload.changed);\n  gulp.watch(paths.html).on('change', plugins.livereload.changed);\n  gulp.watch(paths.css, ['csslint']).on('change', plugins.livereload.changed);\n  gulp.watch(paths.less, ['less']).on('change', plugins.livereload.changed);\n// https://github.com/gulpjs/gulp/blob/master/docs/recipes/delete-files-folder.md\ngulp.task('clean', function (cb) {\ngulp.task('develop', ['env:develop'], function () {\ngulp.task('test', ['env:test', 'karma:unit', 'mochaTest']);\ngulp.task('default', defaultTasks);\n// See also: https://github.com/timdp/heroku-buildpack-nodejs-gulp\ngulp.task('heroku:production', ['env:production', 'cssmin', 'uglify']);",
                "sample": "grep -i gulp test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output all lines in test.txt that contain 'node' case insensitively",
                "check": "\\s*grep\\s+-i\\s+(('|\")?(N|n)(O|o)(D|d)(E|e)('|\")?)\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "js: ['*.js', 'test/**/*.js', '!test/coverage/**', '!bower_components/**', 'packages/**/*.js', '!packages/**/node_modules/**', '!packages/contrib/**/*.js', '!packages/contrib/**/node_modules/**'],\n  process.env.NODE_ENV = 'test';\n  process.env.NODE_ENV = 'development';\n  process.env.NODE_ENV = 'production';\n  plugins.nodemon({\n    env: { 'NODE_ENV': 'development' } ,\n    ignore: ['./node_modules/**']\nif (process.env.NODE_ENV === 'production') {\n// See also: https://github.com/timdp/heroku-buildpack-nodejs-gulp",
                "sample": "grep -i node test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output all the lines in test.txt that do not contain the word 'gulp' case insensitively",
                "check": "\\bgrep\\s*-([iv])(?!\\1)([vi])\\s*gulp\\s*test\\.txt\\b",
                "module": "Files",
                "output": "'use strict';\n\nvar del = require('del'),\n    path = require('path'),\n    through = require('through'),\n    karma = require('karma').server,\n    paths = {\n      js: ['*.js', 'test/**/*.js', '!test/coverage/**', '!bower_components/**', 'packages/**/*.js', '!packages/**/node_modules/**', '!packages/contrib/**/*.js', '!packages/contrib/**/node_modules/**'],\n      html: ['packages/**/public/**/views/**', 'packages/**/server/views/**'],\n      css: ['!bower_components/**', 'packages/**/public/**/css/*.css', '!packages/contrib/**/public/**/css/*.css'],\n      less: ['**/public/**/css/*.less'],\n      coffee: ['packages/**/public/**/*.coffee','*.coffee'],\n      coffees: ['packages/**/server/**/*.coffee']\n    },\n    assets = require('./config/assets.json'),\n    _ = require('lodash'),\n\nfunction count(taskName, message) {\n  var fileCount = 0;\n\n  function countFiles(file) {\n    fileCount++; // jshint ignore:line\n  }\n\n  function endStream() {\n    gutil.log(gutil.colors.cyan(taskName + ': ') + fileCount + ' ' + message || 'files processed.');\n    this.emit('end'); // jshint ignore:line\n  }\n\n  return through(countFiles, endStream);\n}\n\nfunction tokenizeConfig(config) {\n  var destTokens = _.keys(config)[0].split('/');\n\n  return {\n    srcGlob: _.flatten(_.values(config)),\n    destDir: destTokens[destTokens.length - 2],\n    destFile: destTokens[destTokens.length - 1]\n  };\n}\n\n    .pipe(plugins.csslint('.csslintrc'))\n    .pipe(plugins.csslint.reporter())\n    .pipe(count('csslint', 'files lint free'));\n});\n\n  var config = tokenizeConfig(assets.core.css);\n\n  if (config.srcGlob.length) {\n      .pipe(plugins.cssmin({keepBreaks: true}))\n      .pipe(plugins.concat(config.destFile))\n  }\n});\n\n    .pipe(plugins.less())\n      return vinylFile.cwd;\n    }));\n});\n\n\n  var config = tokenizeConfig(assets.core.js);\n\n  if (config.srcGlob.length) {\n      .pipe(plugins.concat(config.destFile))\n      .pipe(plugins.uglify({mangle: false}))\n  }\n});\n    .pipe(coffee({bare: true}).on('error', gutil.log))\n});\n\n  process.env.NODE_ENV = 'test';\n});\n\n  process.env.NODE_ENV = 'development';\n});\n\n  process.env.NODE_ENV = 'production';\n});\n\n  karma.start({\n    configFile: __dirname + '/karma.conf.js',\n    singleRun: true\n  }, done);\n});\n\n  require('server.js');\n  require('meanio/lib/util').preload(__dirname + '/packages/**/server', 'model');\n});\n\n    .pipe(plugins.mocha({\n      reporter: 'spec'\n    }));\n});\n\n\n  plugins.livereload.listen({interval: 500});\n});\n\n  return del(['bower_components/build'], cb);\n});\n\n  plugins.nodemon({\n    script: 'server.coffee',\n    ext: 'html js coffee',\n    env: { 'NODE_ENV': 'development' } ,\n    ignore: ['./node_modules/**']\n  });\n});\n\n\nvar defaultTasks = ['coffee','clean', 'develop', 'watch'];\n\nif (process.env.NODE_ENV === 'production') {\n  defaultTasks = ['clean', 'cssmin', 'uglify'];\n}\n\n\n// For Heroku users only.\n// Docs: https://github.com/linnovate/mean/wiki/Deploying-on-Heroku",
                "sample": "grep -iv gulp test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output the number of lines in test.txt that do not contain the word 'gulp' case insensitively.",
                "check": "\\bgrep\\s*-([ivc])(?!\\1)([ivc])(?!\\1|\\2)([ivc])\\s*gulp\\s*test\\.txt\\b",
                "module": "Files",
                "output": "40",
                "sample": "grep -ivc gulp test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output all lines in the file test.txt that contain the word 'gulp' case insensitively with the line number.",
                "check": "\\bgrep\\s*-([in])(?!\\1)([in])\\s*gulp\\s*test\\.txt\\b",
                "module": "Files",
                "output": "5:    gulp = require('gulp'),\n6:    gutil = require('gulp-util'),\n8:    gulpLoadPlugins = require('gulp-load-plugins'),\n10:    plugins = gulpLoadPlugins(),\n21:    coffee = require('gulp-coffee')\n48:gulp.task('csslint', function () {\n49:  return gulp.src(paths.css)\n55:gulp.task('cssmin', function () {\n59:    return gulp.src(config.srcGlob)\n62:      .pipe(gulp.dest(path.join('bower_components/build', config.destDir)));\n66:gulp.task('less', function() {\n67:  return gulp.src(paths.less)\n69:    .pipe(gulp.dest(function (vinylFile) {\n75:gulp.task('uglify', function () {\n79:    return gulp.src(config.srcGlob)\n82:      .pipe(gulp.dest(path.join('bower_components/build', config.destDir)));\n85:gulp.task('coffee', function() {\n86:  gulp.src(paths.coffee)\n88:    .pipe(gulp.dest('./packages'))\n91:gulp.task('env:test', function () {\n95:gulp.task('env:develop', function () {\n99:gulp.task('env:production', function () {\n103:gulp.task('karma:unit', function (done) {\n110:gulp.task('loadTestSchema', function () {\n115:gulp.task('mochaTest', ['loadTestSchema'], function () {\n116:  return gulp.src('packages/**/server/tests/**/*.js', {read: false})\n122:gulp.task('watch', function () {\n123:  gulp.watch(paths.coffee,['coffee']).on('change', plugins.livereload.changed);\n124:  gulp.watch(paths.coffees).on('change',plugins.livereload.changed);\n125:  gulp.watch(paths.js).on('change', plugins.livereload.changed);\n126:  gulp.watch(paths.html).on('change', plugins.livereload.changed);\n127:  gulp.watch(paths.css, ['csslint']).on('change', plugins.livereload.changed);\n128:  gulp.watch(paths.less, ['less']).on('change', plugins.livereload.changed);\n133:// https://github.com/gulpjs/gulp/blob/master/docs/recipes/delete-files-folder.md\n134:gulp.task('clean', function (cb) {\n138:gulp.task('develop', ['env:develop'], function () {\n147:gulp.task('test', ['env:test', 'karma:unit', 'mochaTest']);\n155:gulp.task('default', defaultTasks);\n157:// See also: https://github.com/timdp/heroku-buildpack-nodejs-gulp\n160:gulp.task('heroku:production', ['env:production', 'cssmin', 'uglify']);",
                "sample": "grep -in gulp test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output the number of words in test.txt",
                "check": "\\s*wc\\s+-w\\s+test\\.txt\\s*",
                "module": "Files",
                "output": "353 test.txt",
                "sample": "wc -w test.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Output the number of lines in test.txt",
                "check": "\\s*wc\\s*-l\\s*test\\.txt\\s*",
                "module": "Files",
                "output": "160 test.txt",
                "sample": "wc -l test.txt",
                "subject": "Unix"
            }
        ],
        "IO": [
            {
                "challenge": "Type a command that will create a file called 'list.txt' and read in your input to that file until you press ^D (Control+D)",
                "check": "\\s*cat\\s+>\\s+list\\.txt\\s*",
                "module": "IO",
                "output": "pear\nbanana\napple\n^D\n(assuming you typed pear, banana, apple, list.txt will now contain that list)",
                "sample": "cat > list.txt",
                "subject": "Unix"
            },
            {
                "challenge": "Type a command that will take further input until you press ^D  and append it to the file 'list'",
                "check": "\\s*cat\\s*>>\\s*list\\s*",
                "module": "IO",
                "output": "peach\ngrape\norange\n^D (Control D to stop)",
                "sample": "cat >> list",
                "subject": "Unix"
            },
            {
                "challenge": "Concatenate the contents of 'list1' and 'list2' and output them to the file 'biglist'",
                "check": "\\s*cat\\s+list1\\s+list2\\s*>\\s*biglist\\s*",
                "module": "IO",
                "output": "Files concatenated. (not actually output)",
                "sample": "cat list1 list2 > biglist",
                "subject": "Unix"
            },
            {
                "challenge": "Type a command that will read in a list of words until you press ^D and then output them alphabetically",
                "check": "\\s*sort\\s*",
                "module": "IO",
                "output": "dog\ncat\nbird\nape\n^D (control d to stop)\nape\nbird \ncat \ndog",
                "sample": "sort",
                "subject": "Unix"
            },
            {
                "challenge": "Sort the contents of 'biglist' and output result to console",
                "check": "\\s*sort(\\s+<\\s+)?biglist\\s*",
                "module": "IO",
                "output": "ape\nbird \ncat \ndog",
                "sample": "sort < biglist",
                "subject": "Unix"
            },
            {
                "challenge": "Sort the contents of 'biglist' and output the contents to 'newlist'",
                "check": "\\s*sort\\s*<?\\s*biglist\\s*>\\s*newlist\\s*",
                "module": "IO",
                "output": "File created containing ordered biglist. (not actually output)",
                "sample": "sort < biglist > newlist",
                "subject": "Unix"
            },
            {
                "challenge": "Output who is currently logged into the system",
                "check": "\\s*who\\s*",
                "module": "IO",
                "output": "lex     console  Mar  8 03:09\nzane    console  Mar  8 02:45",
                "sample": "who",
                "subject": "Unix"
            },
            {
                "challenge": "Output the names of people currently logged into the system to the file 'names'",
                "check": "\\s*who\\s*>\\s*names\\s*",
                "module": "IO",
                "output": "File 'names' created containing info about people logged into system. (not actually output)",
                "sample": "who > names",
                "subject": "Unix"
            },
            {
                "challenge": "Sort the contents of 'names' and output to console",
                "check": "\\s*sort\\s*<\\s*names\\s*",
                "module": "IO",
                "output": "lex      console  Mar  8 02:09\npatrick  console  Mar  8 04:33\nzane     console  Mar  8 03:25",
                "sample": "sort < names",
                "subject": "Unix"
            },
            {
                "challenge": "Output the sorted names of people logged into the system",
                "check": "\\s*who\\s*|\\s*sort\\s*",
                "module": "IO",
                "output": "abba       console  Mar  8 02:34\nbeatrice   console  Mar  8 04:39\ncassandra  console  Mar  8 08:36",
                "sample": "who | sort",
                "subject": "Unix"
            },
            {
                "challenge": "Output the number of users currently logged in",
                "check": "\\s*who\\s*\\|\\s*wc\\s+-l\\s*",
                "module": "IO",
                "output": "3",
                "sample": "who | wc -l",
                "subject": "Unix"
            }
        ],
        "System": [
            {
                "challenge": "list the long listing of your current directory",
                "check": "\\s*ls\\s+-l\\s*",
                "module": "System",
                "output": "drwxr-xr-x  10 lex  staff   340 Feb  2 22:52 2gif\n-rw-r--r--   1 lex  staff     0 Mar  8 17:03 biglist\n-rw-r--r--   1 lex  staff  1925 Mar  1 04:52 check.html\ndrwxr-xr-x   6 lex  staff   204 Jan 22 07:49 chrome extensions\n-rw-r--r--   1 lex  staff   418 Feb 24 16:27 es5.js\ndrwxr-xr-x  13 lex  staff   442 Feb 25 01:57 es6\n-rw-r--r--   1 lex  staff     0 Mar  8 17:05 grouse\n-rw-r--r--   1 lex  staff     0 Mar  8 17:05 house\ndrwxr-xr-x  12 lex  staff   408 Jan 12 19:49 humorme\ndrwxr-xr-x  31 lex  staff  1054 Mar  8 03:12 lex\n-rw-r--r--   1 lex  staff    31 Mar  8 16:46 list\ndrwxr-xr-x  27 lex  staff   918 Feb 10 18:33 mean-sample\n-rw-r--r--   1 lex  staff     0 Mar  8 17:05 mouse\ndrwxr-xr-x  10 lex  staff   340 Feb 24 20:46 myscripts\n-rw-r--r--   1 lex  staff    31 Mar  8 16:47 newlist\n-rw-r--r--   1 lex  staff    31 Mar  8 16:47 nlist\ndrwxr-xr-x   3 lex  staff   102 Feb 26 04:42 nodes6\ndrwxr-xr-x  10 lex  staff   340 Feb 25 18:28 one-hour-codelab\ndrwxr-xr-x   3 lex  staff   102 Feb 24 20:48 startup\ndrwxr-xr-x   3 lex  staff   102 Feb 25 14:12 test\n-rw-r--r--   1 lex  staff  1395 Feb 27 04:35 test-check-a.html",
                "sample": "ls -l",
                "subject": "Unix"
            },
            {
                "challenge": "Remove read, write, and execute privileges from the group and others for the file 'biglist'",
                "check": "\\s*chmod\\s+go-([rwx])(?!\\1)([rwx])(?!\\1|\\2)([rwx])\\s+biglist\\s*",
                "module": "System",
                "output": "Read/write/execute privileges successfully removed from 'group' and 'others'! (not actually output)",
                "sample": "chmod go-rwx biglist",
                "subject": "Unix"
            },
            {
                "challenge": "Add 'read' and 'write' privileges for all to the file 'biglist'",
                "check": "\\s*chmod\\s+a\\+(rw|wr)\\s+biglist\\b",
                "module": "System",
                "output": "read/write privileges added to 'biglist' (not actually output)",
                "sample": "chmod a+rw biglist",
                "subject": "Unix"
            },
            {
                "challenge": "give the user execute privileges for the file 'command.sh'",
                "check": "\\s*chmod\\s+u\\+x\\s+command\\.sh\\s*",
                "module": "System",
                "output": "execute privileges added to 'command' for user (not actually output)",
                "sample": "chmod u+x command.sh",
                "subject": "Unix"
            },
            {
                "challenge": "Ouput the status of all your processes",
                "check": "\\s*ps\\s*",
                "module": "System",
                "output": "PID TTY           TIME CMD\n  492 ttys000    0:00.03 -/bin/bash\n  500 ttys000   31:06.42 gulp\n21531 ttys000    0:04.45 node /usr/local/bin/coffee server.coffee\n  584 ttys001    0:00.02 -/bin/bash\n20485 ttys002    0:00.10 -/bin/bash",
                "sample": "ps",
                "subject": "Unix"
            },
            {
                "challenge": "Run the command 'gulp' in the background",
                "check": "\\s*gulp\\s+\\&\\s*",
                "module": "System",
                "output": "'gulp' running in bg (not actually output)",
                "sample": "gulp &",
                "subject": "Unix"
            },
            {
                "challenge": "Wait ten seconds and output 'hello'",
                "check": "\\s*sleep\\s+10\\s*&&\\s*echo\\s+('|\")?hello('|\")?\\s*",
                "module": "System",
                "output": "(waited ten seconds and output 'hello')",
                "sample": "sleep 10 && echo hello",
                "subject": "Unix"
            },
            {
                "challenge": "What keys do you press to suspend the current foreground job? (use ^ for control)",
                "check": "(\\^z)|(\\^Z)",
                "module": "System",
                "output": "[1]+  Stopped                 gulp",
                "sample": "^Z",
                "subject": "Unix"
            },
            {
                "challenge": "Show all background jobs",
                "check": "\\s*jobs\\s*",
                "module": "System",
                "output": "[1]+  Stopped                 gulp\n[2]-  Stopped                 vi README.md",
                "sample": "jobs",
                "subject": "Unix"
            },
            {
                "challenge": "Kill background process #2",
                "check": "\\s*kill\\s+\\%2\\s*",
                "module": "System",
                "output": "[2]+  Stopped                 gulp",
                "sample": "kill %2",
                "subject": "Unix"
            },
            {
                "challenge": "What do you type to kill the foreground process? (use ^ for control)",
                "check": "(\\^c)|(\\^C)",
                "module": "System",
                "output": "Foreground process stopped (not actually output)",
                "sample": "^C",
                "subject": "Unix"
            },
            {
                "challenge": "Bring your only background process to the foreground",
                "check": "\\s*fg\\s*",
                "module": "System",
                "output": "Only background process brought to foreground (not actually output)",
                "sample": "fg",
                "subject": "Unix"
            },
            {
                "challenge": "Bring background job #5 to the foreground",
                "check": "\\s*fg\\s+\\%5\\s*",
                "module": "System",
                "output": "foreground process #5 brought to front (not actually output)",
                "sample": "fg %5",
                "subject": "Unix"
            },
            {
                "challenge": "Kill process with the id 24490",
                "check": "\\s*kill\\s+24490\\s*",
                "module": "System",
                "output": "Process 24490 killed (not actually output)",
                "sample": "kill 24490",
                "subject": "Unix"
            },
            {
                "challenge": "Force kill process with the id 24490",
                "check": "\\s*kill\\s+-9\\s+24490\\s*",
                "module": "System",
                "output": "Process 24490 killed. (not actually output)",
                "sample": "kill -9 24490",
                "subject": "Unix"
            },
            {
                "challenge": "Output your current username",
                "check": "\\s*whoami\\s*",
                "module": "System",
                "output": "lex",
                "sample": "whoami",
                "subject": "Unix"
            },
            {
                "challenge": "Output all users currently logged in",
                "check": "\\s*users\\s*",
                "module": "System",
                "output": "zane lex patrick mark",
                "sample": "users",
                "subject": "Unix"
            },
            {
                "challenge": "Output a calendar",
                "check": "\\s*cal\\s*",
                "module": "System",
                "output": "March 2015\nSu Mo Tu We Th Fr Sa\n 1  2  3  4  5  6  7\n 8  9 10 11 12 13 14\n15 16 17 18 19 20 21\n22 23 24 25 26 27 28\n29 30 31",
                "sample": "cal",
                "subject": "Unix"
            },
            {
                "challenge": "Change your password",
                "check": "\\s*passwd\\s*",
                "module": "System",
                "output": "Changing password for lex.\nOld Password:\nNew Password:\nRetype New Password:",
                "sample": "passwd",
                "subject": "Unix"
            },
            {
                "challenge": "Logout of your current shell",
                "check": "\\s*logout\\s*",
                "module": "System",
                "output": "(user logged out)",
                "sample": "logout",
                "subject": "Unix"
            },
            {
                "challenge": "Immediately shut down your computer",
                "check": "\\s*halt\\s*",
                "module": "System",
                "output": "(computer immediately shut down)",
                "sample": "halt",
                "subject": "Unix"
            },
            {
                "challenge": "Shut down your computer",
                "check": "\\s*shutdown\\s*",
                "module": "System",
                "output": "(computer shutting down)",
                "sample": "shutdown",
                "subject": "Unix"
            },
            {
                "challenge": "Reboot your computer",
                "check": "\\s*reboot\\s*",
                "module": "System",
                "output": "(System rebooting now)",
                "sample": "reboot",
                "subject": "Unix"
            },
            {
                "challenge": "Change the permissions of the file 'go' to execute only for the user (regardless of current permissions)",
                "check": "\\s*chmod\\s+u=x\\s*",
                "module": "System",
                "output": "(file 'go' now execute only for user)",
                "sample": "chmod u=x",
                "subject": "Unix"
            },
            {
                "challenge": "Change the group of the file 'myfile' to 'special'",
                "check": "\\s*chgrp\\s+special\\s+myfile\\s*",
                "module": "System",
                "output": "(group of myfile is now 'special')",
                "sample": "chgrp special myfile",
                "subject": "Unix"
            }
        ],
        "Other": [
            {
                "challenge": "Output the manual page for ls",
                "check": "\\s*man\\s+ls\\s*",
                "module": "Other",
                "output": "LS(1)                     BSD General Commands Manual                    LS(1)\n\nNAME\n     ls -- list directory contents\n\nSYNOPSIS\n     ls [-ABCFGHLOPRSTUW@abcdefghiklmnopqrstuwx1] [file ...]\n\nDESCRIPTION\n     For each operand that names a file of a type other than directory, ls displays its name as\n     well as any requested, associated information.  For each operand that names a file of type\n     directory, ls displays the names of files contained within that directory, as well as any\n     requested, associated information.\n\n     If no operands are given, the contents of the current directory are displayed.  If more than\n     one operand is given, non-directory operands are displayed first; directory and non-directory\n     operands are sorted separately and in lexicographical order.\n\n     The following options are available:\n\n     -@      Display extended attribute keys and sizes in long (-l) output.\n\n     -1      (The numeric digit ``one''.)  Force output to be one entry per line.  This is the\n             default when output is not to a terminal.\n\n     -A      List all entries except for . and ...  Always set for the super-user.\n\n     -a      Include directory entries whose names begin with a dot (.).\n\n     -B      Force printing of non-printable characters (as defined by ctype(3) and current locale\n             settings) in file names as \\xxx, where xxx is the numeric value of the character in\n             octal.\n\n     -b      As -B, but use C escape codes whenever possible.\n\n     -C      Force multi-column output; this is the default when output is to a terminal.\n\n     -c      Use time when file status was last changed for sorting (-t) or long printing (-l).\n\n     -d      Directories are listed as plain files (not searched recursively).\n\n     -e      Print the Access Control List (ACL) associated with the file, if present, in long\n             (-l) output.\n\n     -F      Display a slash (`/') immediately after each pathname that is a directory, an aster-\n             isk (`*') after each that is executable, an at sign (`@') after each symbolic link,\n             an equals sign (`=') after each socket, a percent sign (`%') after each whiteout, and\n             a vertical bar (`|') after each that is a FIFO.\n\n     -f      Output is not sorted.  This option turns on the -a option.\n\n     -G      Enable colorized output.  This option is equivalent to defining CLICOLOR in the envi-\n             ronment.  (See below.)\n\n     -g      This option is only available for compatibility with POSIX; it is used to display the\n             group name in the long (-l) format output (the owner name is suppressed).\n\n     -H      Symbolic links on the command line are followed.  This option is assumed if none of\n             the -F, -d, or -l options are specified.\n\n     -h      When used with the -l option, use unit suffixes: Byte, Kilobyte, Megabyte, Gigabyte,\n             Terabyte and Petabyte in order to reduce the number of digits to three or less using\n             base 2 for sizes.\n\n     -i      For each file, print the file's file serial number (inode number).\n\n     -k      If the -s option is specified, print the file size allocation in kilobytes, not\n             blocks.  This option overrides the environment variable BLOCKSIZE.\n\n     -L      Follow all symbolic links to final target and list the file or directory the link\n             references rather than the link itself.  This option cancels the -P option.\n\n     -l      (The lowercase letter ``ell''.)  List in long format.  (See below.)  If the output is\n             to a terminal, a total sum for all the file sizes is output on a line before the long\n             listing.\n\n     -m      Stream output format; list files across the page, separated by commas.\n\n     -n      Display user and group IDs numerically, rather than converting to a user or group\n             name in a long (-l) output.  This option turns on the -l option.\n\n     -O      Include the file flags in a long (-l) output.\n\n     -o      List in long format, but omit the group id.\n\n     -P      If argument is a symbolic link, list the link itself rather than the object the link\n             references.  This option cancels the -H and -L options.\n\n     -p      Write a slash (`/') after each filename if that file is a directory.\n\n     -q      Force printing of non-graphic characters in file names as the character `?'; this is\n             the default when output is to a terminal.\n\n     -R      Recursively list subdirectories encountered.\n\n     -r      Reverse the order of the sort to get reverse lexicographical order or the oldest\n             entries first (or largest files last, if combined with sort by size\n\n     -S      Sort files by size\n\n     -s      Display the number of file system blocks actually used by each file, in units of 512\n             bytes, where partial units are rounded up to the next integer value.  If the output\n             is to a terminal, a total sum for all the file sizes is output on a line before the\n             listing.  The environment variable BLOCKSIZE overrides the unit size of 512 bytes.\n\n     -T      When used with the -l (lowercase letter ``ell'') option, display complete time infor-\n             mation for the file, including month, day, hour, minute, second, and year.\n\n     -t      Sort by time modified (most recently modified first) before sorting the operands by\n             lexicographical order.\n\n     -u      Use time of last access, instead of last modification of the file for sorting (-t) or\n             long printing (-l).\n\n     -U      Use time of file creation, instead of last modification for sorting (-t) or long out-\n             put (-l).\n\n     -v      Force unedited printing of non-graphic characters; this is the default when output is\n             not to a terminal.\n\n     -W      Display whiteouts when scanning directories.  (-S) flag).\n\n     -w      Force raw printing of non-printable characters.  This is the default when output is\n             not to a terminal.\n\n     -x      The same as -C, except that the multi-column output is produced with entries sorted\n             across, rather than down, the columns.\n\n     The -1, -C, -x, and -l options all override each other; the last one specified determines the\n     format used.\n\n     The -c and -u options override each other; the last one specified determines the file time\n     used.\n\n     The -B, -b, -w, and -q options all override each other; the last one specified determines the\n     format used for non-printable characters.\n\n     The -H, -L and -P options all override each other (either partially or fully); they are\n     applied in the order specified.\n\n     By default, ls lists one entry per line to standard output; the exceptions are to terminals\n     or when the -C or -x options are specified.\n\n     File information is displayed with one or more <blank>s separating the information associated\n     with the -i, -s, and -l options.\n\n   The Long Format\n     If the -l option is given, the following information is displayed for each file: file mode,\n     number of links, owner name, group name, number of bytes in the file, abbreviated month, day-\n     of-month file was last modified, hour file last modified, minute file last modified, and the\n     pathname.  In addition, for each directory whose contents are displayed, the total number of\n     512-byte blocks used by the files in the directory is displayed on a line by itself, immedi-\n     ately before the information for the files in the directory.  If the file or directory has\n     extended attributes, the permissions field printed by the -l option is followed by a '@'\n     character.  Otherwise, if the file or directory has extended security information (such as an\n     access control list), the permissions field printed by the -l option is followed by a '+'\n     character.\n\n     If the modification time of the file is more than 6 months in the past or future, then the\n     year of the last modification is displayed in place of the hour and minute fields.\n\n     If the owner or group names are not a known user or group name, or the -n option is given,\n     the numeric ID's are displayed.\n\n     If the file is a character special or block special file, the major and minor device numbers\n     for the file are displayed in the size field.  If the file is a symbolic link, the pathname\n     of the linked-to file is preceded by ``->''.\n\n     The file mode printed under the -l option consists of the entry type, owner permissions, and\n     group permissions.  The entry type character describes the type of file, as follows:\n\n           b     Block special file.\n           c     Character special file.\n           d     Directory.\n           l     Symbolic link.\n           s     Socket link.\n           p     FIFO.\n           -     Regular file.\n\n     The next three fields are three characters each: owner permissions, group permissions, and\n     other permissions.  Each field has three character positions:\n\n           1.   If r, the file is readable; if -, it is not readable.\n\n           2.   If w, the file is writable; if -, it is not writable.\n\n           3.   The first of the following that applies:\n\n                      S     If in the owner permissions, the file is not executable and set-user-\n                            ID mode is set.  If in the group permissions, the file is not exe-\n                            cutable and set-group-ID mode is set.\n\n                      s     If in the owner permissions, the file is executable and set-user-ID\n                            mode is set.  If in the group permissions, the file is executable and\n                            setgroup-ID mode is set.\n\n                      x     The file is executable or the directory is searchable.\n\n                      -     The file is neither readable, writable, executable, nor set-user-ID\n                            nor set-group-ID mode, nor sticky.  (See below.)\n\n                These next two apply only to the third character in the last group (other permis-\n                sions).\n\n                      T     The sticky bit is set (mode 1000), but not execute or search permis-\n                            sion.  (See chmod(1) or sticky(8).)\n\n                      t     The sticky bit is set (mode 1000), and is searchable or executable.\n                            (See chmod(1) or sticky(8).)\n\nEXAMPLES\n     The following is how to do an ls listing sorted by increasing size\n\n           ls -lrS\n\nDIAGNOSTICS\n     The ls utility exits 0 on success, and >0 if an error occurs.\n\nENVIRONMENT\n     The following environment variables affect the execution of ls:\n\n     BLOCKSIZE       If the environment variable BLOCKSIZE is set, the block counts (see -s) will\n                     be displayed in units of that size block.\n\n     CLICOLOR        Use ANSI color sequences to distinguish file types.  See LSCOLORS below.  In\n                     addition to the file types mentioned in the -F option some extra attributes\n                     (setuid bit set, etc.) are also displayed.  The colorization is dependent on\n                     a terminal type with the proper termcap(5) capabilities.  The default\n                     ``cons25'' console has the proper capabilities, but to display the colors in\n                     an xterm(1), for example, the TERM variable must be set to ``xterm-color''.\n                     Other terminal types may require similar adjustments.  Colorization is\n                     silently disabled if the output isn't directed to a terminal unless the\n                     CLICOLOR_FORCE variable is defined.\n\n     CLICOLOR_FORCE  Color sequences are normally disabled if the output isn't directed to a ter-\n                     minal.  This can be overridden by setting this flag.  The TERM variable still\n                     needs to reference a color capable terminal however otherwise it is not pos-\n                     sible to determine which color sequences to use.\n\n     COLUMNS         If this variable contains a string representing a decimal integer, it is used\n                     as the column position width for displaying multiple-text-column output.  The\n                     ls utility calculates how many pathname text columns to display based on the\n                     width provided.  (See -C and -x.)\n\n     LANG            The locale to use when determining the order of day and month in the long -l\n                     format output.  See environ(7) for more information.\n\n     LSCOLORS        The value of this variable describes what color to use for which attribute\n                     when colors are enabled with CLICOLOR.  This string is a concatenation of\n                     pairs of the format fb, where f is the foreground color and b is the back-\n                     ground color.\n\n                     The color designators are as follows:\n\n                           a     black\n                           b     red\n                           c     green\n                           d     brown\n                           e     blue\n                           f     magenta\n                           g     cyan\n                           h     light grey\n                           A     bold black, usually shows up as dark grey\n                           B     bold red\n                           C     bold green\n                           D     bold brown, usually shows up as yellow\n                           E     bold blue\n                           F     bold magenta\n                           G     bold cyan\n                           H     bold light grey; looks like bright white\n                           x     default foreground or background\n\n                     Note that the above are standard ANSI colors.  The actual display may differ\n                     depending on the color capabilities of the terminal in use.\n\n                     The order of the attributes are as follows:\n\n                           1.   directory\n                           2.   symbolic link\n                           3.   socket\n                           4.   pipe\n                           5.   executable\n                           6.   block special\n                           7.   character special\n                           8.   executable with setuid bit set\n                           9.   executable with setgid bit set\n                           10.  directory writable to others, with sticky bit\n                           11.  directory writable to others, without sticky bit\n\n                     The default is \"exfxcxdxbxegedabagacad\", i.e. blue foreground and default\n                     background for regular directories, black foreground and red background for\n                     setuid executables, etc.\n\n     LS_COLWIDTHS    If this variable is set, it is considered to be a colon-delimited list of\n                     minimum column widths.  Unreasonable and insufficient widths are ignored\n                     (thus zero signifies a dynamically sized column).  Not all columns have\n                     changeable widths.  The fields are, in order: inode, block count, number of\n                     links, user name, group name, flags, file size, file name.\n\n     TERM            The CLICOLOR functionality depends on a terminal type with color capabili-\n                     ties.\n\n     TZ              The timezone to use when displaying dates.  See environ(7) for more informa-\n                     tion.\n\nCOMPATIBILITY\n     The group field is now automatically included in the long listing for files in order to be\n     compatible with the IEEE Std 1003.2 (``POSIX.2'') specification.\n\nLEGACY DESCRIPTION\n     In legacy mode, the -f option does not turn on the -a option and the -g, -n, and -o options\n     do not turn on the -l option.\nglCopyTexSubImage3D(3G)  - copy a three-dimensional texture subimage\nglutCopyColormap(3)      - copies the logical colormap for the layer in use from a specified window to the current window\nmemccpy(3)               - copy string until character found\nmemcpy(3)                - copy memory area\nmemmove(3)               - copy byte string\nmemset_s(3)              - copy a value to all bytes of a memory buffer\noverlay(3x), overwrite(3x), copywin(3x) - overlay and manipulate overlapped curses windows\npax(1)                   - read and write file archives and copy directory hierarchies\npbcopy(1), pbpaste(1)    - provide copying and pasting to the pasteboard (the Clipboard) from command line\nrcp(1)                   - remote file copy\nscp(1)                   - secure copy (remote file copy program)\nstpcpy(3), stpncpy(3), strcpy(3), strncpy(3) - copy strings\nstrdup(3), strndup(3)    - save a copy of a string\nstrlcpy(3), strlcat(3)   - size-bounded string copying and concatenation\ntext(ntcl), tk_textCopy(ntcl), tk_textCut(ntcl), tk_textPaste(ntcl) - Create and manipulate text widgets\ntqueue(n), transfer::copy::queue(n) - Queued transfers\nuucp(1)                  - Unix to Unix copy\nuuid_copy(3)             - copy a UUID value\nCpMac(1), /usr/bin/CpMac(1) - copy files preserving metadata and forks\nSVN::Wc(3pm)             - Subversion working copy functions\ngit-checkout-index(1)    - Copy files from the index to the working tree\nsvnversion(1)            - Produce a compact version number for a working copy\nmac:lex zane$ man ls\nmac:lex zane$ man ls > manpage\nmac:lex zane$ cat manpage\n\nLS(1)                     BSD General Commands Manual                    LS(1)\n\nNAME\n     ls -- list directory contents\n\nSYNOPSIS\n     ls [-ABCFGHLOPRSTUW@abcdefghiklmnopqrstuwx1] [file ...]\n\nDESCRIPTION\n     For each operand that names a file of a type other than directory, ls\n     displays its name as well as any requested, associated information.  For\n     each operand that names a file of type directory, ls displays the names\n     of files contained within that directory, as well as any requested, asso-\n     ciated information.\n\n     If no operands are given, the contents of the current directory are dis-\n     played.  If more than one operand is given, non-directory operands are\n     displayed first; directory and non-directory operands are sorted sepa-\n     rately and in lexicographical order.\n\n     The following options are available:\n\n     -@      Display extended attribute keys and sizes in long (-l) output.\n\n     -1      (The numeric digit ``one''.)  Force output to be one entry per\n             line.  This is the default when output is not to a terminal.\n\n     -A      List all entries except for . and ...  Always set for the super-\n             user.\n\n     -a      Include directory entries whose names begin with a dot (.).\n\n     -B      Force printing of non-printable characters (as defined by\n             ctype(3) and current locale settings) in file names as \\xxx,\n             where xxx is the numeric value of the character in octal.\n\n     -b      As -B, but use C escape codes whenever possible.\n\n     -C      Force multi-column output; this is the default when output is to\n             a terminal.\n\n     -c      Use time when file status was last changed for sorting (-t) or\n             long printing (-l).\n\n     -d      Directories are listed as plain files (not searched recursively).\n\n     -e      Print the Access Control List (ACL) associated with the file, if\n             present, in long (-l) output.\n\n     -F      Display a slash (`/') immediately after each pathname that is a\n             directory, an asterisk (`*') after each that is executable, an at\n             sign (`@') after each symbolic link, an equals sign (`=') after\n             each socket, a percent sign (`%') after each whiteout, and a ver-\n             tical bar (`|') after each that is a FIFO.\n\n     -f      Output is not sorted.  This option turns on the -a option.\n\n     -G      Enable colorized output.  This option is equivalent to defining\n             CLICOLOR in the environment.  (See below.)\n\n     -g      This option is only available for compatibility with POSIX; it is\n             used to display the group name in the long (-l) format output\n             (the owner name is suppressed).\n\n     -H      Symbolic links on the command line are followed.  This option is\n             assumed if none of the -F, -d, or -l options are specified.\n\n     -h      When used with the -l option, use unit suffixes: Byte, Kilobyte,\n             Megabyte, Gigabyte, Terabyte and Petabyte in order to reduce the\n             number of digits to three or less using base 2 for sizes.\n\n     -i      For each file, print the file's file serial number (inode num-\n             ber).\n\n     -k      If the -s option is specified, print the file size allocation in\n             kilobytes, not blocks.  This option overrides the environment\n             variable BLOCKSIZE.\n\n     -L      Follow all symbolic links to final target and list the file or\n             directory the link references rather than the link itself.  This\n             option cancels the -P option.\n\n     -l      (The lowercase letter ``ell''.)  List in long format.  (See\n             below.)  If the output is to a terminal, a total sum for all the\n             file sizes is output on a line before the long listing.\n\n     -m      Stream output format; list files across the page, separated by\n             commas.\n\n     -n      Display user and group IDs numerically, rather than converting to\n             a user or group name in a long (-l) output.  This option turns on\n             the -l option.\n\n     -O      Include the file flags in a long (-l) output.\n\n     -o      List in long format, but omit the group id.\n\n     -P      If argument is a symbolic link, list the link itself rather than\n             the object the link references.  This option cancels the -H and\n             -L options.\n\n     -p      Write a slash (`/') after each filename if that file is a direc-\n             tory.\n\n     -q      Force printing of non-graphic characters in file names as the\n             character `?'; this is the default when output is to a terminal.\n\n     -R      Recursively list subdirectories encountered.\n\n     -r      Reverse the order of the sort to get reverse lexicographical\n             order or the oldest entries first (or largest files last, if com-\n             bined with sort by size\n\n     -S      Sort files by size\n\n     -s      Display the number of file system blocks actually used by each\n             file, in units of 512 bytes, where partial units are rounded up\n             to the next integer value.  If the output is to a terminal, a\n             total sum for all the file sizes is output on a line before the\n             listing.  The environment variable BLOCKSIZE overrides the unit\n             size of 512 bytes.\n\n     -T      When used with the -l (lowercase letter ``ell'') option, display\n             complete time information for the file, including month, day,\n             hour, minute, second, and year.\n\n     -t      Sort by time modified (most recently modified first) before sort-\n             ing the operands by lexicographical order.\n\n     -u      Use time of last access, instead of last modification of the file\n             for sorting (-t) or long printing (-l).\n\n     -U      Use time of file creation, instead of last modification for sort-\n             ing (-t) or long output (-l).\n\n     -v      Force unedited printing of non-graphic characters; this is the\n             default when output is not to a terminal.\n\n     -W      Display whiteouts when scanning directories.  (-S) flag).\n\n     -w      Force raw printing of non-printable characters.  This is the\n             default when output is not to a terminal.\n\n     -x      The same as -C, except that the multi-column output is produced\n             with entries sorted across, rather than down, the columns.\n\n     The -1, -C, -x, and -l options all override each other; the last one\n     specified determines the format used.\n\n     The -c and -u options override each other; the last one specified deter-\n     mines the file time used.\n\n     The -B, -b, -w, and -q options all override each other; the last one\n     specified determines the format used for non-printable characters.\n\n     The -H, -L and -P options all override each other (either partially or\n     fully); they are applied in the order specified.\n\n     By default, ls lists one entry per line to standard output; the excep-\n     tions are to terminals or when the -C or -x options are specified.\n\n     File information is displayed with one or more <blank>s separating the\n     information associated with the -i, -s, and -l options.\n\n   The Long Format\n     If the -l option is given, the following information is displayed for\n     each file: file mode, number of links, owner name, group name, number of\n     bytes in the file, abbreviated month, day-of-month file was last modi-\n     fied, hour file last modified, minute file last modified, and the path-\n     name.  In addition, for each directory whose contents are displayed, the\n     total number of 512-byte blocks used by the files in the directory is\n     displayed on a line by itself, immediately before the information for the\n     files in the directory.  If the file or directory has extended\n     attributes, the permissions field printed by the -l option is followed by\n     a '@' character.  Otherwise, if the file or directory has extended secu-\n     rity information (such as an access control list), the permissions field\n     printed by the -l option is followed by a '+' character.\n\n     If the modification time of the file is more than 6 months in the past or\n     future, then the year of the last modification is displayed in place of\n     the hour and minute fields.\n\n     If the owner or group names are not a known user or group name, or the -n\n     option is given, the numeric ID's are displayed.\n\n     If the file is a character special or block special file, the major and\n     minor device numbers for the file are displayed in the size field.  If\n     the file is a symbolic link, the pathname of the linked-to file is pre-\n     ceded by ``->''.\n\n     The file mode printed under the -l option consists of the entry type,\n     owner permissions, and group permissions.  The entry type character\n     describes the type of file, as follows:\n\n           b     Block special file.\n           c     Character special file.\n           d     Directory.\n           l     Symbolic link.\n           s     Socket link.\n           p     FIFO.\n           -     Regular file.\n\n     The next three fields are three characters each: owner permissions, group\n     permissions, and other permissions.  Each field has three character posi-\n     tions:\n\n           1.   If r, the file is readable; if -, it is not readable.\n\n           2.   If w, the file is writable; if -, it is not writable.\n\n           3.   The first of the following that applies:\n\n                      S     If in the owner permissions, the file is not exe-\n                            cutable and set-user-ID mode is set.  If in the\n                            group permissions, the file is not executable and\n                            set-group-ID mode is set.\n\n                      s     If in the owner permissions, the file is exe-\n                            cutable and set-user-ID mode is set.  If in the\n                            group permissions, the file is executable and set-\n                            group-ID mode is set.\n\n                      x     The file is executable or the directory is search-\n                            able.\n\n                      -     The file is neither readable, writable, exe-\n                            cutable, nor set-user-ID nor set-group-ID mode,\n                            nor sticky.  (See below.)\n\n                These next two apply only to the third character in the last\n                group (other permissions).\n\n                      T     The sticky bit is set (mode 1000), but not execute\n                            or search permission.  (See chmod(1) or\n                            sticky(8).)\n\n                      t     The sticky bit is set (mode 1000), and is search-\n                            able or executable.  (See chmod(1) or sticky(8).)\n\nEXAMPLES\n     The following is how to do an ls listing sorted by increasing size\n\n           ls -lrS\n\nDIAGNOSTICS\n     The ls utility exits 0 on success, and >0 if an error occurs.\n\nENVIRONMENT\n     The following environment variables affect the execution of ls:\n\n     BLOCKSIZE       If the environment variable BLOCKSIZE is set, the block\n                     counts (see -s) will be displayed in units of that size\n                     block.\n\n     CLICOLOR        Use ANSI color sequences to distinguish file types.  See\n                     LSCOLORS below.  In addition to the file types mentioned\n                     in the -F option some extra attributes (setuid bit set,\n                     etc.) are also displayed.  The colorization is dependent\n                     on a terminal type with the proper termcap(5) capabili-\n                     ties.  The default ``cons25'' console has the proper\n                     capabilities, but to display the colors in an xterm(1),\n                     for example, the TERM variable must be set to\n                     ``xterm-color''.  Other terminal types may require simi-\n                     lar adjustments.  Colorization is silently disabled if\n                     the output isn't directed to a terminal unless the\n                     CLICOLOR_FORCE variable is defined.\n\n     CLICOLOR_FORCE  Color sequences are normally disabled if the output isn't\n                     directed to a terminal.  This can be overridden by set-\n                     ting this flag.  The TERM variable still needs to refer-\n                     ence a color capable terminal however otherwise it is not\n                     possible to determine which color sequences to use.\n\n     COLUMNS         If this variable contains a string representing a decimal\n                     integer, it is used as the column position width for dis-\n                     playing multiple-text-column output.  The ls utility cal-\n                     culates how many pathname text columns to display based\n                     on the width provided.  (See -C and -x.)\n\n     LANG            The locale to use when determining the order of day and\n                     month in the long -l format output.  See environ(7) for\n                     more information.\n\n     LSCOLORS        The value of this variable describes what color to use\n                     for which attribute when colors are enabled with\n                     CLICOLOR.  This string is a concatenation of pairs of the\n                     format fb, where f is the foreground color and b is the\n                     background color.\n\n                     The color designators are as follows:\n\n                           a     black\n                           b     red\n                           c     green\n                           d     brown\n                           e     blue\n                           f     magenta\n                           g     cyan\n                           h     light grey\n                           A     bold black, usually shows up as dark grey\n                           B     bold red\n                           C     bold green\n                           D     bold brown, usually shows up as yellow\n                           E     bold blue\n                           F     bold magenta\n                           G     bold cyan\n                           H     bold light grey; looks like bright white\n                           x     default foreground or background\n\n                     Note that the above are standard ANSI colors.  The actual\n                     display may differ depending on the color capabilities of\n                     the terminal in use.\n\n                     The order of the attributes are as follows:\n\n                           1.   directory\n                           2.   symbolic link\n                           3.   socket\n                           4.   pipe\n                           5.   executable\n                           6.   block special\n                           7.   character special\n                           8.   executable with setuid bit set\n                           9.   executable with setgid bit set\n                           10.  directory writable to others, with sticky bit\n                           11.  directory writable to others, without sticky\n                                bit\n\n                     The default is \"exfxcxdxbxegedabagacad\", i.e. blue fore-\n                     ground and default background for regular directories,\n                     black foreground and red background for setuid executa-\n                     bles, etc.\n\n     LS_COLWIDTHS    If this variable is set, it is considered to be a colon-\n                     delimited list of minimum column widths.  Unreasonable\n                     and insufficient widths are ignored (thus zero signifies\n                     a dynamically sized column).  Not all columns have\n                     changeable widths.  The fields are, in order: inode,\n                     block count, number of links, user name, group name,\n                     flags, file size, file name.\n\n     TERM            The CLICOLOR functionality depends on a terminal type\n                     with color capabilities.\n\n     TZ              The timezone to use when displaying dates.  See\n                     environ(7) for more information.\n\nCOMPATIBILITY\n     The group field is now automatically included in the long listing for\n     files in order to be compatible with the IEEE Std 1003.2 (``POSIX.2'')\n     specification.\n\nLEGACY DESCRIPTION\n     In legacy mode, the -f option does not turn on the -a option and the -g,\n     -n, and -o options do not turn on the -l option.\n\n     Also, the -o option causes the file flags to be included in a long (-l)\n     output; there is no -O option.\n\n     When -H is specified (and not overridden by -L or -P) and a file argument\n     is a symlink that resolves to a non-directory file, the output will\n     reflect the nature of the link, rather than that of the file.  In legacy\n     operation, the output will describe the file.\n\n     For more information about legacy mode, see compat(5).\n\nSEE ALSO\n     chflags(1), chmod(1), sort(1), xterm(1), compat(5), termcap(5),\n     symlink(7), sticky(8)\n\nSTANDARDS\n     The ls utility conforms to IEEE Std 1003.1-2001 (``POSIX.1'').\n\nHISTORY\n     An ls command appeared in Version 1 AT&T UNIX.\n\nBUGS\n     To maintain backward compatibility, the relationships between the many\n     options are quite complex.\n\nBSD                              May 19, 2002                              BSD",
                "sample": "man ls",
                "subject": "Unix"
            },
            {
                "challenge": "Output a one line description of the command 'cp'",
                "check": "\\s*whatis\\s+cp\\s*",
                "module": "Other",
                "output": "cp(1)                    - copy files",
                "sample": "whatis cp",
                "subject": "Unix"
            },
            {
                "challenge": "Search for all commands with the keyword 'copy' in the man page header.",
                "check": "\\s*apropos\\s+('|\")?copy('|\")?\\s*",
                "module": "Other",
                "output": "mysqlhotcopy(1)          - a database backup program\nBIO_f_ssl(3ssl), BIO_set_ssl(3ssl), BIO_get_ssl(3ssl), BIO_set_ssl_mode(3ssl), BIO_set_ssl_renegotiate_bytes(3ssl), BIO_get_num_renegotiates(3ssl), BIO_set_ssl_renegotiate_timeout(3ssl), BIO_new_ssl(3ssl), BIO_new_ssl_connect(3ssl), BIO_new_buffer_ssl_connect(3ssl), BIO_ssl_copy_session_id(3ssl), BIO_ssl_shutdown(3ssl) - SSL BIO\nBN_copy(3ssl), BN_dup(3ssl) - copy BIGNUMs\nBN_mod_mul_montgomery(3ssl), BN_MONT_CTX_new(3ssl), BN_MONT_CTX_init(3ssl), BN_MONT_CTX_free(3ssl), BN_MONT_CTX_set(3ssl), BN_MONT_CTX_copy(3ssl), BN_from_montgomery(3ssl), BN_to_montgomery(3ssl) - Montgomery multiplication\nCURLOPT_COPYPOSTFIELDS(3) - have libcurl copy data to POST\nClone(3pm)               - recursively copy Perl datatypes\nDBIx::Class::CDBICompat::Copy(3pm) - Emulates Class::DBI->copy($new_id)\nEVP_MD_CTX_init(3ssl), EVP_MD_CTX_create(3ssl), EVP_DigestInit_ex(3ssl), EVP_DigestUpdate(3ssl), EVP_DigestFinal_ex(3ssl), EVP_MD_CTX_cleanup(3ssl), EVP_MD_CTX_destroy(3ssl), EVP_MAX_MD_SIZE(3ssl), EVP_MD_CTX_copy_ex(3ssl), EVP_MD_CTX_copy(3ssl), EVP_MD_type(3ssl), EVP_MD_pkey_type(3ssl), EVP_MD_size(3ssl), EVP_MD_block_size(3ssl), EVP_MD_CTX_md(3ssl), EVP_MD_CTX_size(3ssl), EVP_MD_CTX_block_size(3ssl), EVP_MD_CTX_type(3ssl), EVP_md_null(3ssl), EVP_md2(3ssl), EVP_md5(3ssl), EVP_sha(3ssl), EVP_sha1(3ssl), EVP_dss(3ssl), EVP_dss1(3ssl), EVP_mdc2(3ssl), EVP_ripemd160(3ssl), EVP_get_digestbyname(3ssl), EVP_get_digestbynid(3ssl), EVP_get_digestbyobj(3ssl) - EVP digest routines\nFD_CLR(2), FD_COPY(2), FD_ISSET(2), FD_SET(2), FD_ZERO(2), select(2) - synchronous IO multiplexing\nFile::Copy(3pm)          - Copy files or filehandles\nPPI::Transform::UpdateCopyright(3pm) - Demonstration PPI::Transform class\nTcl_FSRegister(3tcl), Tcl_FSUnregister(3tcl), Tcl_FSData(3tcl), Tcl_FSMountsChanged(3tcl), Tcl_FSGetFileSystemForPath(3tcl), Tcl_FSGetPathType(3tcl), Tcl_FSCopyFile(3tcl), Tcl_FSCopyDirectory(3tcl), Tcl_FSCreateDirectory(3tcl), Tcl_FSDeleteFile(3tcl), Tcl_FSRemoveDirectory(3tcl), Tcl_FSRenameFile(3tcl), Tcl_FSListVolumes(3tcl), Tcl_FSEvalFile(3tcl), Tcl_FSEvalFileEx(3tcl), Tcl_FSLoadFile(3tcl), Tcl_FSMatchInDirectory(3tcl), Tcl_FSLink(3tcl), Tcl_FSLstat(3tcl), Tcl_FSUtime(3tcl), Tcl_FSFileAttrsGet(3tcl), Tcl_FSFileAttrsSet(3tcl), Tcl_FSFileAttrStrings(3tcl), Tcl_FSStat(3tcl), Tcl_FSAccess(3tcl), Tcl_FSOpenFileChannel(3tcl), Tcl_FSGetCwd(3tcl), Tcl_FSChdir(3tcl), Tcl_FSPathSeparator(3tcl), Tcl_FSJoinPath(3tcl), Tcl_FSSplitPath(3tcl), Tcl_FSEqualPaths(3tcl), Tcl_FSGetNormalizedPath(3tcl), Tcl_FSJoinToPath(3tcl), Tcl_FSConvertToPathType(3tcl), Tcl_FSGetInternalRep(3tcl), Tcl_FSGetTranslatedPath(3tcl), Tcl_FSGetTranslatedStringPath(3tcl), Tcl_FSNewNativePath(3tcl), Tcl_FSGetNativePath(3tcl), Tcl_FSFileSystemInfo(3tcl), Tcl_AllocStatBuf(3tcl) - procedures to interact with any filesystem\nacl_copy_entry(3)        - copy an ACL entry to another ACL entry\nacl_copy_ext(3), acl_copy_ext_native(3), acl_copy_int(3), acl_copy_int_native(3), acl_size(3) - convert an ACL to and from an external representation\nasr(8)                   - Apple Software Restore; copy volumes (e.g. from disk images)\nbcmp(3), bcopy(3), bzero(3), memccpy(3), memchr(3), memcmp(3), memcpy(3), memmove(3), memset(3) - byte string operations\nbcopy(3)                 - copy byte string\ncopy(9), copyin(9), copyinstr(9), copyout(9), copystr(9) - kernel copy functions\ncopy_printf_domain(3), free_printf_domain(3), new_printf_domain(3), register_printf_domain_function(3), register_printf_domain_render_std(3) - extensible printf domains\ncopyfile(3), fcopyfile(3), copyfile_state_alloc(3), copyfile_state_free(3), copyfile_state_get(3), copyfile_state_set(3) - copy a file\ncopyops(n), transfer::copy(n) - Data transfer foundation\ncopysign(3)              - changes the sign of x to that of y\ncp(1)                    - copy files\ncpio(1)                  - copy files to and from archives\ndd(1)                    - convert and copy a file\ndispatch_data_create(3), dispatch_data_create_concat(3), dispatch_data_create_subrange(3), dispatch_data_create_map(3), dispatch_data_apply(3), dispatch_data_copy_region(3), dispatch_data_get_size(3) - create and manipulate dispatch data objects\nditto(1)                 - copy directory hierarchies, create and extract archives\nfcopy(ntcl)              - Copy data from one channel to another\nglBlitFramebuffer(3G)    - copy a block of pixels from the read framebuffer to the draw framebuffer\nglCopyBufferSubData(3G)  - copy part of the data store of a buffer object to the data store of another buffer object\nglCopyColorSubTable(3)   - respecify a portion of a color table\nglCopyColorTable(3)      - copy pixels into a color table\nglCopyConvolutionFilter1D(3) - copy pixels into a one-dimensional convolution filter\nglCopyConvolutionFilter2D(3) - copy pixels into a two-dimensional convolution filter\nglCopyPixels(3)          - copy pixels in the frame buffer\nglCopyTexImage1D(3)      - copy pixels into a 1D texture image\nglCopyTexImage1D(3G)     - copy pixels into a 1D texture image\nglCopyTexImage2D(3)      - copy pixels into a 2D texture image\nglCopyTexImage2D(3G)     - copy pixels into a 2D texture image\nglCopyTexSubImage1D(3)   - copy a one-dimensional texture subimage\nglCopyTexSubImage1D(3G)  - copy a one-dimensional texture subimage\nglCopyTexSubImage2D(3)   - copy a two-dimensional texture subimage\nglCopyTexSubImage2D(3G)  - copy a two-dimensional texture subimage\nglCopyTexSubImage3D(3)   - copy a three-dimensional texture subimage\nglCopyTexSubImage3D(3G)  - copy a three-dimensional texture subimage\nglutCopyColormap(3)      - copies the logical colormap for the layer in use from a specified window to the current window\nmemccpy(3)               - copy string until character found\nmemcpy(3)                - copy memory area\nmemmove(3)               - copy byte string\nmemset_s(3)              - copy a value to all bytes of a memory buffer\noverlay(3x), overwrite(3x), copywin(3x) - overlay and manipulate overlapped curses windows\npax(1)                   - read and write file archives and copy directory hierarchies\npbcopy(1), pbpaste(1)    - provide copying and pasting to the pasteboard (the Clipboard) from command line\nrcp(1)                   - remote file copy\nscp(1)                   - secure copy (remote file copy program)\nstpcpy(3), stpncpy(3), strcpy(3), strncpy(3) - copy strings\nstrdup(3), strndup(3)    - save a copy of a string\nstrlcpy(3), strlcat(3)   - size-bounded string copying and concatenation\ntext(ntcl), tk_textCopy(ntcl), tk_textCut(ntcl), tk_textPaste(ntcl) - Create and manipulate text widgets\ntqueue(n), transfer::copy::queue(n) - Queued transfers\nuucp(1)                  - Unix to Unix copy\nuuid_copy(3)             - copy a UUID value\nCpMac(1), /usr/bin/CpMac(1) - copy files preserving metadata and forks\nSVN::Wc(3pm)             - Subversion working copy functions\ngit-checkout-index(1)    - Copy files from the index to the working tree\nsvnversion(1)            - Produce a compact version number for a working copy",
                "sample": "apropos copy",
                "subject": "Unix"
            },
            {
                "challenge": "Output the space left on the file system",
                "check": "\\s*df\\s+\\.\\s*",
                "module": "Other",
                "output": "Filesystem   512-blocks      Used Available Capacity  iused    ifree %iused  Mounted on\n/dev/disk0s1  468105464 342258976 125334488    74% 42846370 15666811   73%   /",
                "sample": "df .",
                "subject": "Unix"
            },
            {
                "challenge": "Output the space taken by each subdirectory and file",
                "check": "\\s*du\\s+-s\\s+\\*\\s*",
                "module": "Other",
                "output": "7408\tApplications\n26792\tApplications (Parallels)\n3464\tBooks\n4683952\tCalibre Library\n1363360\tDesktop\n1756912\tDeveloper\n49640520\tDocuments\n68252976\tDownloads\n3790568\tGoogle Drive\n28085800\tLibrary\n798848\tMovies\n25133192\tMusic\n8585608\tPictures\n0\tPublic\n3066504\tSites\n6720\tdart\n1368\tdotjs\n11328\tnew_gif.gif\n2864\tscreencast.gif\n8\ttest.js\n46432\ttmp",
                "sample": "du -s *",
                "subject": "Unix"
            },
            {
                "challenge": "Compress file.txt to a file called file.txt.gz",
                "check": "\\s*gzip\\s+file\\.txt\\s*",
                "module": "Other",
                "output": "File compressed and output to file.txt.gz (not actually output)",
                "sample": "gzip file.txt",
                "subject": "Unix"
            },
            {
                "challenge": "uncompress file.txt.gz",
                "check": "\\s*gunzip\\s+file\\.txt\\.gz\\s*",
                "module": "Other",
                "output": "file.txt uncompressed (not actually output)",
                "sample": "gunzip file.txt.gz",
                "subject": "Unix"
            },
            {
                "challenge": "Output contents of file.txt.gz without uncompressing the file",
                "check": "\\s*zcat\\s+file\\.txt\\.gz\\s*",
                "module": "Other",
                "output": "Uncompressed file contents",
                "sample": "zcat file.txt.gz",
                "subject": "Unix"
            },
            {
                "challenge": "Output the contents of file.txt.gz to less",
                "check": "\\s*zcat\\s+file\\.txt\\.gz\\s*|\\s*less\\s*",
                "module": "Other",
                "output": "Uncompressed contents of file.txt.gz output to standard output using less.",
                "sample": "zcat file.txt.gz | less",
                "subject": "Unix"
            },
            {
                "challenge": "Output information on all the files in your current directory",
                "check": "\\s*file\\s+\\*\\s*",
                "module": "Other",
                "output": "Gruntfile.js:     ASCII C++ program text\nLICENSE:          ASCII English text\nProcfile:         ASCII text\nREADME.md:        ASCII English text, with very long lines\nbower.json:       ASCII text\nbower_components: directory\nconfig:           directory\nexec:             directory\ngulpfile.js:      ASCII C++ program text\nkarma.conf.js:    ASCII C++ program text\nmanpage:          ASCII English text, with overstriking\nmean.json:        ASCII text\nnode_modules:     directory\npackage.json:     ASCII text\npackages:         directory\nserver.coffee:    ASCII text\nserver.js:        ASCII text\ntools:            directory\n/Users/zane:      directory",
                "sample": "file *",
                "subject": "Unix"
            },
            {
                "challenge": "Output the difference between file1 and file2",
                "check": "\\s*diff\\s+file1\\s+file2\\s*",
                "module": "Other",
                "output": "2,4c2,4\n< I need to run the laundry.\n< I need to wash the dog.\n< I need to get the car detailed.\n---\n> I need to do the laundry.\n> I need to wash the car.\n> I need to get the dog detailed.",
                "sample": "diff file1 file2",
                "subject": "Unix"
            },
            {
                "challenge": "Output the names of all files with the '.txt' extension in your current directory",
                "check": "\\s*find\\s+\\.\\s+-name\\s+(\"|')?\\*\\.txt(\"|')\\s+-print\\s*",
                "module": "Other",
                "output": "./lex/node_modules/meanio/node_modules/request/node_modules/hawk/node_modules/hoek/test/modules/ignore.txt\n./lex/node_modules/meanio/node_modules/request/node_modules/stringstream/LICENSE.txt\n./lex/node_modules/meanio/node_modules/request/node_modules/tough-cookie/node_modules/punycode/LICENSE-MIT.txt\n./lex/node_modules/meanio/node_modules/request/node_modules/tough-cookie/public-suffix.txt\n./lex/node_modules/meanio/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap/test/idleness.txt\n./lex/node_modules/mocha/node_modules/mkdirp/bin/usage.txt\n./lex/node_modules/supertest/node_modules/superagent/node_modules/formidable/test/fixture/file/funkyfilename.txt\n./lex/node_modules/supertest/node_modules/superagent/node_modules/formidable/test/fixture/file/plain.txt\n./lex/node_modules/swig/node_modules/optimist/node_modules/wordwrap/test/idleness.txt\n./lex/node_modules/swig/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap/test/idleness.txt\n./lex/node_modules/view-helpers/LICENSE.txt\n./lex/packages/system/public/assets/static/humans.txt\n./lex/packages/system/public/assets/static/robots.txt",
                "sample": "find . -name \"*.txt\" -print",
                "subject": "Unix"
            },
            {
                "challenge": "Output all files over 1MB as a long listing",
                "check": "\\s*find\\s+\\.\\s+-size\\s+\\+1M\\s+-ls\\s*",
                "module": "Other",
                "output": "23511453     9744 -r-xr-xr-x    1 lex             staff             4988792 Jan 14 07:59 ./myscripts/gdb\n23273753    25632 -rwxr-xr-x    1 lex             staff            13122356 Nov 30  1979 ./myscripts/ngrok\n32236280    10696 -rw-r--r--    1 lex             staff             5472481 Nov  8 14:45 ./lex/.bower-cache/ef520c8fd7dd6d5ed7cde5a020d2bc74/1.1.8/lib/ace/mode/xquery/xqlint.js\n28769078    11616 -r--r--r--    1 lex             staff             5945376 Feb  5 11:54 ./lex/.git/objects/pack/pack-f5f1acb1a35bf22d70cfcfaf00a9734f3e86976d.pack",
                "sample": "find . -size +1M -ls",
                "subject": "Unix"
            },
            {
                "challenge": "Output the last 500 lines from your history",
                "check": "\\s*history\\s*",
                "module": "Other",
                "output": "2475  vi file1\n 2476  vi file2\n 2477  diff file1 file2\n 2478  vi file1\n 2479  vi file2\n 2480  diff file1 file2\n 2481  vi 1\n 2482  vi 2\n 2483  diff 1 2\n 2484  vi 1\n 2485  vi 2\n 2486  diff 1 2\n 2487  vi file1\n 2488  vi file2\n 2489  vi file1\n 2490  vi file1\n 2491  diff file1 file2\n 2492  vi file2\n 2493  vi file1\n 2494  diff file1 file2\n 2495  vi file1\n 2496  diff file1 file2\n 2497  find . -name \"*.txt\" -print\n 2498  find . -size +1M -ls\n 2499  count &\n 2500  hsitory\n 2501  history",
                "sample": "history",
                "subject": "Unix"
            },
            {
                "challenge": "Run the last command",
                "check": "\\s*\\!\\!\\s*",
                "module": "Other",
                "output": "ls\nGruntfile.js\t\tbower.json\t\tkarma.conf.js\t\tpackages\nLICENSE\t\t\tbower_components\tmean.json\t\tserver.coffee\nProcfile\t\tconfig\t\t\tnode_modules\t\tserver.js\nREADME.md\t\tgulpfile.js\t\tpackage.json\t\ttools",
                "sample": "!!",
                "subject": "Unix"
            },
            {
                "challenge": "run the 3rd to last command in the history",
                "check": "\\s*\\!-3\\s*",
                "module": "Other",
                "output": "find . -size +1M -ls\n32241798    13600 -rw-r--r--    1 lex             staff             6959180 Nov  8 14:37 ./.bower-cache/9ed38525cbe603a13619923875a2e96d/1.1.8/src/worker-xquery.js\n32241194     9664 -rw-r--r--    1 lex             staff             4945023 Nov  8 14:37 ./.bower-cache/9ed38525cbe603a13619923875a2e96d/1.1.8/src-min/worker-xquery.js\n32240892     9664 -rw-r--r--    1 lex             staff             4945067 Nov  8 14:37 ./.bower-cache/9ed38525cbe603a13619923875a2e96d/1.1.8/src-min-noconflict/worker-xquery.js",
                "sample": "!-3",
                "subject": "Unix"
            },
            {
                "challenge": "Run the fifth command in your history",
                "check": "\\s*\\!5\\s*",
                "module": "Other",
                "output": "cd ../../Sites",
                "sample": "!5",
                "subject": "Unix"
            },
            {
                "challenge": "Run the last command starting with 'grep'",
                "check": "\\s*\\!grep\\s*",
                "module": "Other",
                "output": "grep -ivc gulp gulpfile.js\ngrep: gulpfile.js: No such file or directory",
                "sample": "!grep",
                "subject": "Unix"
            },
            {
                "challenge": "Set the size of the history buffer to 100",
                "check": "\\s*set\\s+history\\=100\\s*",
                "module": "Other",
                "output": "History will now remember your last 100 commands.",
                "sample": "set history=100",
                "subject": "Unix"
            },
            {
                "challenge": "Open an FTP connection to mydomain.com",
                "check": "\\s*ftp\\s+mydomain\\.com\\s*",
                "module": "Other",
                "output": "Connected to 74.220.215.248.\n220---------- Welcome to Pure-FTPd [privsep] [TLS] ----------\n220-You are user number 1 of 1000 allowed.\n220-Local time is now 18:06. Server port: 21.\n220-This is a private system - No anonymous login\n220-IPv6 connections are also welcome on this server.\n220 You will be disconnected after 15 minutes of inactivity.\nName (mydomain.com:me)me@zanehitchcox.com\n331 User me@mydomain.com OK. Password required\nPassword:\n230 OK. Current restricted directory is /\nRemote system type is UNIX.\nUsing binary mode to transfer files.",
                "sample": "ftp mydomain.com",
                "subject": "Unix"
            },
            {
                "challenge": "upload the file 'myfile' through your ftp connection",
                "check": "\\s*put\\s+myfile\\s*",
                "module": "Other",
                "output": "local: .myfile remote: .myfile\n229 Extended Passive mode OK (|||32358|)\n150 Accepted data connection\n100% |***********************************|  1031        1.05 MiB/s    00:00 ETA\n226-File successfully transferred\n226 0.092 seconds (measured here), 10.95 Kbytes per second\n1031 bytes sent in 00:00 (10.81 KiB/s)",
                "sample": "put myfile",
                "subject": "Unix"
            },
            {
                "challenge": "Show all available files on remote FTP connection system in current directory",
                "check": "\\s*dir\\s*",
                "module": "Other",
                "output": "229 Extended Passive mode OK (|||17918|)\n150 Accepted data connection\ndrwxr-xr-x    2 lex   lex         4096 Mar 18 18:06 .\ndrwxr-xr-x    2 lex   lex         4096 Mar 18 18:06 ..\n-rw-r--r--    1 lex   lex         1031 Mar 18 18:06 myfile\n226-Options: -a -l\n226 3 matches total",
                "sample": "dir",
                "subject": "Unix"
            }
        ],
        "Code": [
            {
                "challenge": "We are going  to be downloading, configuring, and compiling source code.\n\nFirst create a directory called \"download\" and change to the newly created directory, in the same command.",
                "check": "\\s*mkdir\\s+download\\s*\\&\\&\\s*cd\\s+download\\s*",
                "module": "Code",
                "output": "Created and changed directories to 'download'",
                "sample": "mkdir download && cd download",
                "subject": "Unix"
            },
            {
                "challenge": "Download the file http://www.ee.surrey.ac.uk/Teaching/Unix/units-1.74.tar.gz, saving it as 'units.tar.gz'",
                "check": "\\s*curl\\s+\\-o\\s+units\\.tar\\.gz\\s+http://www.ee.surrey.ac.uk/Teaching/Unix/units-1.74.tar.gz\\s*",
                "module": "Code",
                "output": "% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  174k  100  174k    0     0  26870      0  0:00:06  0:00:06 --:--:-- 36536",
                "sample": "curl -o units.tar.gz http://www.ee.surrey.ac.uk/Teaching/Unix/units-1.74.tar.gz",
                "subject": "Unix"
            },
            {
                "challenge": "Now, show all the files in your current directory.",
                "check": "\\s*ls\\s*",
                "module": "Code",
                "output": "units.tar.gz",
                "sample": "ls",
                "subject": "Unix"
            },
            {
                "challenge": "unzip the file you downloaded",
                "check": "\\s*gunzip\\s+units\\.tar\\.gz\\s*",
                "module": "Code",
                "output": "(units.tar.gz unzipped)",
                "sample": "gunzip units.tar.gz",
                "subject": "Unix"
            },
            {
                "challenge": "Show the contents of your current directory",
                "check": "\\s*ls\\s*",
                "module": "Code",
                "output": "units-1.74.tar",
                "sample": "ls",
                "subject": "Unix"
            },
            {
                "challenge": "Untar your new tar file",
                "check": "\\s*tar\\s+-([xvf])(?!\\1)([xvf])(?!\\1|\\2)([xvf])\\s+units-1\\.74\\.tar\\s*",
                "module": "Code",
                "output": "x units-1.74/\nx units-1.74/README\nx units-1.74/ChangeLog\nx units-1.74/units.info\nx units-1.74/units.doc\nx units-1.74/getopt1.c\nx units-1.74/units.dvi\nx units-1.74/Makefile.in\nx units-1.74/units.c\nx units-1.74/getopt.c\nx units-1.74/getopt.h\nx units-1.74/units.dat\nx units-1.74/units.man\nx units-1.74/units.texinfo\nx units-1.74/configure.in\nx units-1.74/configure\nx units-1.74/strfunc.c\nx units-1.74/COPYING\nThis is a beta testing release.\n\n     Completely rewritten parser supports\n         Grouping with parentheses\n         Noninteger powers of numbers (3^0.2)\n         Functions (log, ln, log2, sin, cos, tan, exp) which operate\n             on any dimensionless argument (e.g. log(watts/horsepower))\n         Roots of units: sqrt(unit), cuberoot(unit), unit^(1|4), etc.\n     Nonlinear units definitions can be specified in units.dat by\n         giving functions that convert to and from linear units. This\n         makes it possible to provide conversion between Fahrenheit\n         and Celsius, one of the most requested features that is\n         absent from version 1.55.\n     Nonlinear units definitions can be specified by giving a list of\n         points and using linear interpolation.\n\nTester tasks\n     Test portability (can you compile it?)\n     Find bugs. Does the new parser always do what it should?\n     Do the new features work as expected (e.g. intuitively)?\n     Do the old features still work the way they used to?\n     Is the documentation clear?\n\n     Do you have any ideas on a better notation to use in units.dat\n     for defining nonlinear units?  The current notation is\n     counterintuitive.\n\nNew releases will be appearing at\nhttp://www.cam.cornell.edu/~adrian/units.html periodically.\n\nadrian@cam.cornell.edu\n\n------------------------------------------------------------------\n\nGNU `units' converts between different systems of units.  It can\nhandle multiplicative scale changes.  It can also handle nonlinear\nconversions such as Celsius to Fahrenheit.\n\nGeneral installation instructions appear in the file `INSTALL'.  You\nshould be able to run `./configure' followed by `make'.  If you give\nno options to configure, it will compile units to look for the units\ndata file in a standard location (probably /usr/local/share).  If you\ntry to use the program without installing you will need to use the\n`-f' option.  If you don't want to commit to an installation location,\nyou can invoke configure by typing `./configure -datadir='.  Then no\npath name will be compiled into `units' and it will search your PATH\nenvironment variable to find the units data file.\n\nThe documentation is available in texinfo, roff, and text format.  The\nman page is generated automatically from the texinfo documentation.\nThis man page produces readable results when run through nroff, but it\nshould probably not be printed with troff or groff---no effort has\nbeen made to ensure that it prints out reasonably.  To generate a\nprinted manual, use `units.dvi' instead.\n\nThis program has the following incompatibilties with unix `units':\n  * Exponentiation in numbers requires an `e', so you must write 2.5e-2\n      instead of 2.5-2.\n  * Prefixes are listed in the units file.\n  * GNU `units' tries both the -s and -es plural forms.\n  * The default output format is slightly different.\n  * The units database is much larger and more informative, but with some\n      differences. (e.g. `g' is for gravity in unix `units' and grams in\n      GNU `units'.)  The comment character has been changed to `#'.\n\nGNU `units' includes the following extensions:\n  * Multiplication can be written with a `*' if desired.\n  * Exponents can be written with '^' in units.\n  * Exponents can be larger than 9 if written with `^'.\n  * Sums of units can be converted.\n  * The units data file is extensively commented.\n  * Units which measure reciprocal dimensions can be converted.\n  * Parentheses for grouping are supported.\n  * Funtions such as sin, cos, and log are supported.\n  * Roots of units can be computed.\n\nPossible things for the future:\n  * Bundle up the units conversion stuff into a library.\n  * Allow multiple -f options to load several files\n  * Allow some way of having units like '$' that don't require a trailing\n      space so you can write '$5'.  This could be handled by having a\n      command in the units database that specifies units which automatically\n      get a space inserted  after their name.\n  * Have a metacommand in the units datafile that specifies how plurals should\n      be tried for this file.  This would allow expansion into other\n      languages.  (Of course, the real work of expanding into other languages\n      is writing a units file that is appropriate for the language in question\n      and includes local units.  It's not just a translation task.)\n      Another thing that could be accomplished here would be translation of\nx units-1.74/Makefile.dos\nx units-1.74/install-sh\nx units-1.74/mkinstalldirs\nx units-1.74/NEWS\nx units-1.74/ansi2knr.1\nx units-1.74/ansi2knr.c\nx units-1.74/aclocal.m4\nx units-1.74/texi2man\nx units-1.74/INSTALL\nx units-1.74/parse.tab.c\nx units-1.74/parse.y\nx units-1.74/units.h",
                "sample": "tar -xvf units-1.74.tar",
                "subject": "Unix"
            },
            {
                "challenge": "Show the contents of your current directory",
                "check": "\\s*ls\\s*",
                "module": "Code",
                "output": "units-1.74\tunits.tar",
                "sample": "ls",
                "subject": "Unix"
            },
            {
                "challenge": "Change to the units-1.74 directory",
                "check": "\\s*cd\\s+units-1\\.74\\s*",
                "module": "Code",
                "sample": "cd units-1.74",
                "subject": "Unix"
            },
            {
                "challenge": "Make a new directory called 'units' in your home folder",
                "check": "\\s*mkdir\\s+\\~\\/units\\s*",
                "module": "Code",
                "sample": "mkdir ~/units",
                "subject": "Unix"
            },
            {
                "challenge": "Configure the utility, setting the installation path to ~/units",
                "check": "\\s*\\.\\/configure\\s+--prefix=\\$HOME\\/units\\s*",
                "module": "Code",
                "output": "creating cache ./config.cache\nchecking for gcc... gcc\nchecking whether the C compiler (gcc  ) works... yes\nchecking whether the C compiler (gcc  ) is a cross-compiler... no\nchecking whether we are using GNU C... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to accept ANSI C...\nchecking how to run the C preprocessor... gcc -E\nchecking for function prototypes... yes\nchecking for working const... yes\nchecking for a BSD compatible install... /usr/bin/install -c\nchecking for tparm in -lncurses... yes\nchecking for readline in -lreadline... yes\nchecking for readline/readline.h... yes\nchecking for string.h... yes\nchecking for stdlib.h... yes\nchecking for strchr... yes\nchecking for strspn... yes\nchecking for strtok... yes\nupdating cache ./config.cache\ncreating ./config.status\ncreating Makefile",
                "sample": "./configure --prefix=$HOME/units",
                "subject": "Unix"
            },
            {
                "challenge": "Build the package",
                "check": "\\s*make\\s*",
                "module": "Code",
                "output": "gcc -DUNITSFILE=\\\"/Users/lex/units/share/units.dat\\\"  -DREADLINE   -g -O2 -I.  -c units.c\nunits.c:421:19: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n      if (lineptr = strchr(line,'#'))\n          ~~~~~~~~^~~~~~~~~~~~~~~~~~\nunits.c:421:19: note: place parentheses around the assignment to silence this\n      warning\n      if (lineptr = strchr(line,'#'))\n                  ^\n          (                         )\nunits.c:421:19: note: use '==' to turn this assignment into an equality\n      comparison\n      if (lineptr = strchr(line,'#'))\n                  ^\n                  ==\nunits.c:440:14: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n         if (pfxptr = plookup(unitname)) {  /* already there: redefinition */\n             ~~~~~~~^~~~~~~~~~~~~~~~~~~\nunits.c:440:14: note: place parentheses around the assignment to silence this\n      warning\n         if (pfxptr = plookup(unitname)) {  /* already there: redefinition */\n                    ^\n             (                         )\nunits.c:440:14: note: use '==' to turn this assignment into an equality\n      comparison\n         if (pfxptr = plookup(unitname)) {  /* already there: redefinition */\n                    ^\n                    ==\nunits.c:799:13: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n   if (uptr = ulookup(unit))\n       ~~~~~^~~~~~~~~~~~~~~\nunits.c:799:13: note: place parentheses around the assignment to silence this\n      warning\n   if (uptr = ulookup(unit))\n            ^\n       (                   )\nunits.c:799:13: note: use '==' to turn this assignment into an equality\n      comparison\n   if (uptr = ulookup(unit))\n            ^\n            ==\nunits.c:1071:11: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n   if (err=reduceunit(unit))\n       ~~~^~~~~~~~~~~~~~~~~\nunits.c:1071:11: note: place parentheses around the assignment to silence this\n      warning\n   if (err=reduceunit(unit))\n          ^\n       (                   )\nunits.c:1071:11: note: use '==' to turn this assignment into an equality\n      comparison\n   if (err=reduceunit(unit))\n          ^\n          ==\nunits.c:1133:10: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n  if (err=completereduce(input))\n      ~~~^~~~~~~~~~~~~~~~~~~~~~\nunits.c:1133:10: note: place parentheses around the assignment to silence this\n      warning\n  if (err=completereduce(input))\n         ^\n      (                        )\nunits.c:1133:10: note: use '==' to turn this assignment into an equality\n      comparison\n  if (err=completereduce(input))\n         ^\n         ==\nunits.c:1197:11: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n   if (err=completereduce(inunit))\n       ~~~^~~~~~~~~~~~~~~~~~~~~~~\nunits.c:1197:11: note: place parentheses around the assignment to silence this\n      warning\n   if (err=completereduce(inunit))\n          ^\n       (                         )\nunits.c:1197:11: note: use '==' to turn this assignment into an equality\n      comparison\n   if (err=completereduce(inunit))\n          ^\n          ==\nunits.c:1199:11: warning: & has lower precedence than ==; == will be evaluated\n      first [-Wparentheses]\n   if ((n & 1==0) && (inunit->factor<0)) return E_NOTROOT;\n          ^~~~~~\nunits.c:1199:11: note: place parentheses around the '==' expression to silence\n      this warning\n   if ((n & 1==0) && (inunit->factor<0)) return E_NOTROOT;\n          ^\n            (   )\nunits.c:1199:11: note: place parentheses around the & expression to evaluate it\n      first\n   if ((n & 1==0) && (inunit->factor<0)) return E_NOTROOT;\n          ^\n        (    )\nunits.c:1201:12: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n   if (err = subunitroot(n, inunit->numerator, outunit.numerator))\n       ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nunits.c:1201:12: note: place parentheses around the assignment to silence this\n      warning\n   if (err = subunitroot(n, inunit->numerator, outunit.numerator))\n           ^\n       (                                                         )\nunits.c:1201:12: note: use '==' to turn this assignment into an equality\n      comparison\n   if (err = subunitroot(n, inunit->numerator, outunit.numerator))\n           ^\n           ==\nunits.c:1203:12: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n   if (err = subunitroot(n, inunit->denominator, outunit.denominator))\n       ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nunits.c:1203:12: note: place parentheses around the assignment to silence this\n      warning\n   if (err = subunitroot(n, inunit->denominator, outunit.denominator))\n           ^\n       (                                                             )\nunits.c:1203:12: note: use '==' to turn this assignment into an equality\n      comparison\n   if (err = subunitroot(n, inunit->denominator, outunit.denominator))\n           ^\n           ==\nunits.c:1275:10: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n  if (err=completereduce(unita))\n      ~~~^~~~~~~~~~~~~~~~~~~~~~\nunits.c:1275:10: note: place parentheses around the assignment to silence this\n      warning\n  if (err=completereduce(unita))\n         ^\n      (                        )\nunits.c:1275:10: note: use '==' to turn this assignment into an equality\n      comparison\n  if (err=completereduce(unita))\n         ^\n         ==\nunits.c:1277:10: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n  if (err=completereduce(unitb))\n      ~~~^~~~~~~~~~~~~~~~~~~~~~\nunits.c:1277:10: note: place parentheses around the assignment to silence this\n      warning\n  if (err=completereduce(unitb))\n         ^\n      (                        )\nunits.c:1277:10: note: use '==' to turn this assignment into an equality\n      comparison\n  if (err=completereduce(unitb))\n         ^\n         ==\nunits.c:1967:21: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n      if (curprefix = plookup(text)){\n          ~~~~~~~~~~^~~~~~~~~~~~~~~\nunits.c:1967:21: note: place parentheses around the assignment to silence this\n      warning\n      if (curprefix = plookup(text)){\n                    ^\n          (                        )\nunits.c:1967:21: note: use '==' to turn this assignment into an equality\n      comparison\n      if (curprefix = plookup(text)){\n                    ^\n                    ==\nunits.c:2101:10: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n  if (err=parseunit(theunit, unitstr, &errmsg, &errloc)){\n      ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nunits.c:2101:10: note: place parentheses around the assignment to silence this\n      warning\n  if (err=parseunit(theunit, unitstr, &errmsg, &errloc)){\n         ^\n      (                                                )\nunits.c:2101:10: note: use '==' to turn this assignment into an equality\n      comparison\n  if (err=parseunit(theunit, unitstr, &errmsg, &errloc)){\n         ^\n         ==\nunits.c:2119:10: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n  if (err=completereduce(theunit)){\n      ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nunits.c:2119:10: note: place parentheses around the assignment to silence this\n      warning\n  if (err=completereduce(theunit)){\n         ^\n      (                          )\nunits.c:2119:10: note: use '==' to turn this assignment into an equality\n      comparison\n  if (err=completereduce(theunit)){\n         ^\n         ==\nunits.c:2187:18: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n    if (function = isfunction(str))\n        ~~~~~~~~~^~~~~~~~~~~~~~~~~\nunits.c:2187:18: note: place parentheses around the assignment to silence this\n      warning\n    if (function = isfunction(str))\n                 ^\n        (                         )\nunits.c:2187:18: note: use '==' to turn this assignment into an equality\n      comparison\n    if (function = isfunction(str))\n                 ^\n                 ==\nunits.c:2189:19: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n    else if (unit = ulookup(str))\n             ~~~~~^~~~~~~~~~~~~~\nunits.c:2189:19: note: place parentheses around the assignment to silence this\n      warning\n    else if (unit = ulookup(str))\n                  ^\n             (                  )\nunits.c:2189:19: note: use '==' to turn this assignment into an equality\n      comparison\n    else if (unit = ulookup(str))\n                  ^\n                  ==\nunits.c:2234:19: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n      if (funcval = isfunction(havestr)){\n          ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\nunits.c:2234:19: note: place parentheses around the assignment to silence this\n      warning\n      if (funcval = isfunction(havestr)){\n                  ^\n          (                            )\nunits.c:2234:19: note: use '==' to turn this assignment into an equality\n      comparison\n      if (funcval = isfunction(havestr)){\n                  ^\n                  ==\nunits.c:2244:19: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n      if (funcval = isfunction(wantstr)){\n          ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\nunits.c:2244:19: note: place parentheses around the assignment to silence this\n      warning\n      if (funcval = isfunction(wantstr)){\n                  ^\n          (                            )\nunits.c:2244:19: note: use '==' to turn this assignment into an equality\n      comparison\n      if (funcval = isfunction(wantstr)){\n                  ^\n                  ==\nunits.c:2266:22: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n         if (funcval = isfunction(havestr)){\n             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\nunits.c:2266:22: note: place parentheses around the assignment to silence this\n      warning\n         if (funcval = isfunction(havestr)){\n                     ^\n             (                            )\nunits.c:2266:22: note: use '==' to turn this assignment into an equality\n      comparison\n         if (funcval = isfunction(havestr)){\n                     ^\n                     ==\nunits.c:2284:27: warning: using the result of an assignment as a condition\n      without parentheses [-Wparentheses]\n         else if (funcval = isfunction(wantstr))\n                  ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~\nunits.c:2284:27: note: place parentheses around the assignment to silence this\n      warning\n         else if (funcval = isfunction(wantstr))\n                          ^\n                  (                            )\nunits.c:2284:27: note: use '==' to turn this assignment into an equality\n      comparison\n         else if (funcval = isfunction(wantstr))\n                          ^\n                          ==\n20 warnings generated.\ngcc -DUNITSFILE=\\\"/Users/lex/units/share/units.dat\\\"  -DREADLINE   -g -O2 -I.  -c parse.tab.c\nparse.y:94:12: warning: using the result of an assignment as a condition without\n      parentheses [-Wparentheses]\n    if (err=unit2num(theunit))\n        ~~~^~~~~~~~~~~~~~~~~~\nparse.y:94:12: note: place parentheses around the assignment to silence this\n      warning\n    if (err=unit2num(theunit))\n           ^\n        (                    )\nparse.y:94:12: note: use '==' to turn this assignment into an equality\n      comparison\n    if (err=unit2num(theunit))\n           ^\n           ==\n/usr/local/share/bison.simple:358:4: warning: implicit declaration of function\n      'yyerror' is invalid in C99 [-Wimplicit-function-declaration]\n          yyerror(\"parser stack overflow\");\n          ^\n/usr/local/share/bison.simple:432:16: warning: implicit declaration of function\n      'yylex' is invalid in C99 [-Wimplicit-function-declaration]\n      yychar = YYLEX;\n               ^\n/usr/local/share/bison.simple:126:16: note: expanded from macro 'YYLEX'\n#define YYLEX           yylex(&yylval, YYLEX_PARAM)\n                        ^\nparse.y:251:1: warning: type specifier missing, defaults to 'int'\n      [-Wimplicit-int]\nyylex(YYSTYPE *lvalp, struct commtype *comm)\n^~~~~\nparse.y:362:1: warning: type specifier missing, defaults to 'int'\n      [-Wimplicit-int]\nyyerror(char *s){}\n^~~~~~~\nparse.y:362:18: warning: control reaches end of non-void function\n      [-Wreturn-type]\nyyerror(char *s){}\n                 ^\n6 warnings generated.\ngcc -DUNITSFILE=\\\"/Users/lex/units/share/units.dat\\\"  -DREADLINE   -g -O2 -I.  -c getopt.c\ngetopt.c:416:30: warning: implicitly declaring library function 'strcmp' with\n      type 'int (const char *, const char *)'\n      if (optind != argc && !strcmp (argv[optind], \"--\"))\n                             ^\ngetopt.c:416:30: note: please include the header <string.h> or explicitly\n      provide a declaration for 'strcmp'\ngetopt.c:492:7: warning: implicitly declaring library function 'strncmp' with\n      type 'int (const char *, const char *, unsigned long)'\n        if (!strncmp (p->name, nextchar, nameend - nextchar))\n             ^\ngetopt.c:492:7: note: please include the header <string.h> or explicitly provide\n      a declaration for 'strncmp'\ngetopt.c:494:32: warning: implicitly declaring library function 'strlen' with\n      type 'unsigned long (const char *)'\n            if (nameend - nextchar == strlen (p->name))\n                                      ^\ngetopt.c:494:32: note: please include the header <string.h> or explicitly\n      provide a declaration for 'strlen'\ngetopt.c:541:6: warning: add explicit braces to avoid dangling else\n      [-Wdangling-else]\n                   else\n                   ^\n4 warnings generated.\ngcc -DUNITSFILE=\\\"/Users/lex/units/share/units.dat\\\"  -DREADLINE   -g -O2 -I.  -c getopt1.c\ngcc  -o units units.o parse.tab.o getopt.o getopt1.o  -lreadline -lncurses -lm\nsed s!@DATAFILE@!/Users/lex/units/share/units.dat! ./units.man > units.1",
                "sample": "make",
                "subject": "Unix"
            },
            {
                "challenge": "check the install",
                "check": "\\s*make\\s+check\\s*",
                "module": "Code",
                "output": "Checking units\nUnits seems to work",
                "sample": "make check",
                "subject": "Unix"
            },
            {
                "challenge": "Install the package",
                "check": "\\s*make\\s+install\\s*",
                "module": "Code",
                "output": "./mkinstalldirs /Users/lex/units/man/man1\nmkdir /Users/lex/units/man\nmkdir /Users/lex/units/man/man1\n/usr/bin/install -c -m 644 units.1 /Users/lex/units/man/man1/`echo units|sed 's,x,x,'`.1\n./mkinstalldirs /Users/lex/units/info\nmkdir /Users/lex/units/info\nif test -f units.info; then d=.; \\\n\t   else d=.; fi; \\\n\t/usr/bin/install -c -m 644 $d/units.info /Users/lex/units/info/units.info; \\\n# Run install-info only if it exists.\nif test -f /Users/lex/units/info/dir; then \\\n\t  if /bin/sh -c 'install-info --version' \\\n\t     >/dev/null 2>&1; then \\\n\t     install-info --dir-file=/Users/lex/units/info/dir \\\n\t               /Users/lex/units/info/units.info; \\\n\t  else true; fi \\\n\telse true; fi\n./mkinstalldirs /Users/lex/units/bin /Users/lex/units/share/\nmkdir /Users/lex/units/bin\nmkdir /Users/lex/units/share\n/usr/bin/install -c units /Users/lex/units/bin/`echo units|sed 's,x,x,'`\n/usr/bin/install -c -m 644 ./units.dat /Users/lex/units/share/units.dat",
                "sample": "make install",
                "subject": "Unix"
            },
            {
                "challenge": "Change to the directory where units is installed (~/units)",
                "check": "\\s*cd\\s+~\\/units\\s*",
                "module": "Code",
                "sample": "cd ~/units",
                "subject": "Unix"
            },
            {
                "challenge": "Run the program 'units'",
                "check": "\\s*\\.\\/units\\s*",
                "module": "Code",
                "output": "Ok, this is where the program 'units' would run",
                "sample": "./units",
                "subject": "Unix"
            },
            {
                "challenge": "Change to the info directory",
                "check": "\\s*cd\\s+info\\s*",
                "module": "Code",
                "sample": "cd info",
                "subject": "Unix"
            },
            {
                "challenge": "Show the contents of your current directory",
                "check": "\\s*ls\\s*",
                "module": "Code",
                "output": "units.info",
                "sample": "ls",
                "subject": "Unix"
            },
            {
                "challenge": "Output the info file (units.info)",
                "check": "\\s*info\\s+--file=units\\.info\\s*",
                "module": "Code",
                "output": "(this is where your would read the documentation for the unix program)",
                "sample": "info --file=units.info",
                "subject": "Unix"
            },
            {
                "challenge": "Change to the 'bin' directory",
                "check": "\\s*cd\\s+bin\\s*",
                "module": "Code",
                "sample": "cd bin",
                "subject": "Unix"
            },
            {
                "challenge": "change back to the binary directory (located at ../bin)",
                "check": "\\s*cd\\s+\\.\\.\\/bin\\s*",
                "module": "Code",
                "sample": "cd ../bin",
                "subject": "Unix"
            },
            {
                "challenge": "Strip all the debug and line numbering information from the 'units' file (to make the file size smaller)",
                "check": "\\s*strip\\s+units\\s*",
                "module": "Code",
                "sample": "strip units",
                "subject": "Unix"
            }
        ],
        "Variables": [
            {
                "challenge": "Output your operating system environmental variable",
                "check": "\\s*echo\\s+\\$OSTYPE\\s*",
                "module": "Variables",
                "output": "darwin14",
                "sample": "echo $OSTYPE",
                "subject": "Unix"
            },
            {
                "challenge": "Show all environmental variables",
                "check": "\\s*printenv\\s*",
                "module": "Variables",
                "output": "TERM_PROGRAM=iTerm.app\nSHELL=/bin/bash\nTERM=xterm-256color\nTMPDIR=/var/folders/zs/z6q0zl_d2vj16kh6tlqg4rs80000gn/T/\nApple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.skZgBwCkBu/Render\nUSER=lex\nSSH_AUTH_SOCK=/private/tmp/com.apple.launchd.lEZJFtgVWi/Listeners\n__CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0\nPATH=/opt/local/bin:/opt/local/sbin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/opt/local/bin:/opt/local/sbin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/Developer/myscripts\nPWD=/Users/lex/Developer\nJAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_31.jdk/Contents/Home\nLANG=en_US.UTF-8\nITERM_PROFILE=Default\nXPC_FLAGS=0x0\nXPC_SERVICE_NAME=0\nSHLVL=1\nHOME=/Users/lex\nITERM_SESSION_ID=w0t2p0\nLOGNAME=lex\n_=/usr/bin/printenv",
                "sample": "printenv",
                "subject": "Unix"
            },
            {
                "challenge": "set the environmental variable \"test\" to \"hello\"",
                "check": "\\s*export\\s+test=hello\\s*",
                "module": "Variables",
                "sample": "export test=hello",
                "subject": "Unix"
            },
            {
                "challenge": "output the value of the environmental variable \"test\"",
                "check": "\\s*echo\\s+\\$test\\s*",
                "module": "Variables",
                "output": "hello",
                "sample": "echo $test",
                "subject": "Unix"
            },
            {
                "challenge": "Run your startup script, '.bashrc', located in your home folder",
                "check": "\\s*source\\s+~\\/\\.bashrc\\s*",
                "module": "Variables",
                "output": "(bash script run)",
                "sample": "source ~/.bashrc",
                "subject": "Unix"
            },
            {
                "challenge": "Set the prompt to '$ '",
                "check": "\\s*PS1=('|\")\\$\\s(\"|')\\s*",
                "module": "Variables",
                "output": "(prompt set to $ )",
                "sample": "PS1=\"$ \"",
                "subject": "Unix"
            },
            {
                "challenge": "Add the directory ~/Developer/myscripts to the 'PATH' environmental variable",
                "check": "\\s*export\\s+PATH=\\$PATH:\\$HOME\\/Developer\\/myscripts\\s*",
                "module": "Variables",
                "output": "(path updated, now any executable located in ~/Developer/myscripts will be available to you)",
                "sample": "export PATH=$PATH:$HOME/Developer/myscripts",
                "subject": "Unix"
            },
            {
                "challenge": "Create an alias for the command 'cd ~/Developer' called 'dev'",
                "check": "\\s*alias\\s+dev=('|\")cd\\s+~/Developer('|\")\\s*",
                "module": "Variables",
                "output": "(now, the command 'dev' will switch you to the ~/Developer directory)",
                "sample": "alias dev='cd ~/Developer'",
                "subject": "Unix"
            }
        ]
    },
    "DOS": {
        "Basics": [
            {
                "challenge": "Show your version of windows",
                "check": "\\s*ver\\s*",
                "module": "Basics",
                "output": "Microsoft Windows [Version 6.3.9600]",
                "sample": "ver",
                "subject": "DOS"
            },
            {
                "challenge": "Show the contents of your current directory",
                "check": "\\s*dir\\s*",
                "module": "Basics",
                "output": "Volume in drive C has no label.\n Volume Serial Number is 8C4B-E550\n\n Directory of C:\\Users\\zane\n\n02/08/15  08:00 PM    <DIR>          .\n02/08/15  08:00 PM    <DIR>          ..\n01/27/15  12:58 PM    <DIR>          Contacts\n08/22/13  10:36 AM    <DIR>          Desktop\n01/27/15  12:55 PM    <DIR>          Documents\n08/22/13  10:36 AM    <DIR>          Downloads\n01/27/15  12:58 PM    <DIR>          Favorites\n02/03/15  04:21 PM    <DIR>          Links\n08/22/13  10:36 AM    <DIR>          Music\n02/03/15  04:08 PM    <DIR>          OneDrive\n08/22/13  10:36 AM    <DIR>          Pictures\n01/27/15  12:58 PM    <DIR>          Saved Games\n01/27/15  12:58 PM    <DIR>          Searches\n08/22/13  10:36 AM    <DIR>          Videos\n               0 File(s)              0 bytes\n              14 Dir(s)  54,833,467,392 bytes free",
                "sample": "dir",
                "subject": "DOS"
            },
            {
                "challenge": "Change to your root directory",
                "check": "\\s*cd\\s+\\/\\s*",
                "module": "Basics",
                "output": "(changed to your root directory)",
                "sample": "cd /",
                "subject": "DOS"
            },
            {
                "challenge": "Make a directory called \"fruit\"",
                "check": "\\s*md\\s+fruit\\s*",
                "module": "Basics",
                "output": "(fruit made)",
                "sample": "md fruit",
                "subject": "DOS"
            },
            {
                "challenge": "remove the directory 'fruit'",
                "check": "\\s*rd\\s+fruit\\s*",
                "module": "Basics",
                "output": "(fruit removed)",
                "sample": "rd fruit",
                "subject": "DOS"
            },
            {
                "challenge": "Change to the \"A\" drive",
                "check": "\\s*(a|A):\\s*",
                "module": "Basics",
                "output": "(changed to A:\\> contrary to the indication of the prompt)",
                "sample": "a:",
                "subject": "DOS"
            },
            {
                "challenge": "Copy the file 'notepad.exe' (in C:\\windows) to the fruits directory (which is in your root directory)",
                "check": "\\s*copy\\s+c:\\\\windows\\\\notepad\\.exe\\s+c:\\\\fruit\\s*",
                "module": "Basics",
                "output": "(notepad.exe copied to fruit)",
                "sample": "copy c:\\windows\\notepad.exe c:\\fruit",
                "subject": "DOS"
            },
            {
                "challenge": "rename 'file1.txt' to file2.txt",
                "check": "\\s*file1\\.txt\\s+file2\\.txt\\s*",
                "module": "Basics",
                "output": "file1.txt renamed to file2.txt",
                "sample": "ren file1.txt file2.txt",
                "subject": "DOS"
            },
            {
                "challenge": "Delete the file 'file.txt'",
                "check": "\\s*del\\s+file\\.txt\\s*",
                "module": "Basics",
                "output": "(file.txt deleted)",
                "sample": "del file.txt",
                "subject": "DOS"
            },
            {
                "challenge": "Delete all files with the suffix '.txt'",
                "check": "\\s*del\\s+\\*\\.txt\\s*",
                "module": "Basics",
                "output": "(file.txt and file2.txt deleted)",
                "sample": "del *.txt",
                "subject": "DOS"
            }
        ]
    },
    "Git": {
        "Setting Up": [
            {
                "challenge": "Initialize a new git repository in the current directory",
                "check": "\\s*git\\s+init\\s*",
                "module": "Setting Up",
                "output": "Initialized empty Git repository in /Users/lex/Developer/proj/.git/",
                "sample": "git init",
                "subject": "Git"
            },
            {
                "challenge": "Create a new git repository in a new folder called 'project'",
                "check": "\\s*git\\s+init\\s+project\\s*",
                "module": "Setting Up",
                "output": "Initialized empty Git repository in /Users/lex/Developer/project/.git/",
                "sample": "git init project",
                "subject": "Git"
            },
            {
                "challenge": "Initialize a shared repository called project.git",
                "check": "\\s*git\\s+init\\s+--bare\\s+project\\.git\\s*",
                "module": "Setting Up",
                "output": "Initialized empty Git repository in /Users/lex/Developer/project.git/",
                "sample": "git init --bare project.git",
                "subject": "Git"
            },
            {
                "challenge": "Tunnel into the site 'site.com' with the user name 'lex'",
                "check": "\\s*ssh\\s+lex@site\\.com\\s*",
                "module": "Setting Up",
                "output": "Connected to site.com",
                "sample": "ssh lex@site.com",
                "subject": "Git"
            },
            {
                "challenge": "Initialize a bare repository called 'my-project.git' in your current directory",
                "check": "\\s*git\\s+init\\s+--bare\\s+my-project\\.git\\s*",
                "module": "Setting Up",
                "output": "Initialized empty Git repository in /Users/lex/my-project.git/",
                "sample": "git init --bare my-project.git",
                "subject": "Git"
            },
            {
                "challenge": "Clone the git repository, 'my-project.git' at 'site.com' with the path 'projs' to your current directory, using the ssh protocol using the username, 'lex'",
                "check": "\\s*git\\s+clone\\s+ssh:\\/\\/lex@site\\.com\\/projs\\/my-project\\.git\\s*",
                "module": "Setting Up",
                "output": "Cloning into 'my-project'...\nremote: Counting objects: 8140, done.\nremote: Compressing objects: 100% (22/22), done.\nremote: Total 8140 (delta 7), reused 0 (delta 0), pack-reused 8116\nReceiving objects: 100% (8140/8140), 5.71 MiB | 1.94 MiB/s, done.\nResolving deltas: 100% (3956/3956), done.\nChecking connectivity... done.",
                "sample": "git clone ssh://lex@site.com/projs/my-project.git",
                "subject": "Git"
            },
            {
                "challenge": "Set your username to lex, globally",
                "check": "\\s*git\\s+config\\s+--global\\s+user\\.name\\s+lex\\s*",
                "module": "Setting Up",
                "sample": "git config --global user.name lex",
                "subject": "Git"
            },
            {
                "challenge": "set your email to lex@lex.com, globally",
                "check": "\\s*git\\s+config\\s+--global\\s+user\\.email\\s+lex@lex\\.com\\s*",
                "module": "Setting Up",
                "sample": "git config --global user.email lex@lex.com",
                "subject": "Git"
            },
            {
                "challenge": "Create an alias, 'po' which runs the command 'push origin master'",
                "check": "\\s*git\\s+config\\s+--global\\s+alias\\.po\\s+('|\")\\s*push\\s+origin\\s+master\\s*('|\")\\s*",
                "module": "Setting Up",
                "sample": "git config --global alias.po 'push origin master'",
                "subject": "Git"
            },
            {
                "challenge": "Set git's text editor to vi",
                "check": "\\s*git\\s+config\\s+--system\\s+core\\.editor\\s+vi\\s*",
                "module": "Setting Up",
                "sample": "git config --system core.editor vi",
                "subject": "Git"
            },
            {
                "challenge": "Open git's global configuration in a text editor",
                "check": "\\s*git\\s+config\\s+((--global\\s+)|(--edit\\s+))(?!\\1)((--global)|(--edit))\\s*",
                "module": "Setting Up",
                "output": "1 [filter \"media\"]\n  2   required = true\n  3   clean = git media clean %f\n  4   smudge = git media smudge %f\n  5 [user]\n  6   name = zane\n  7   email = zwhitchcox@gmail.com\n  8   username = zwhitchcox\n  9 [filter \"hawser\"]\n 10   clean = git hawser clean %f\n 11   smudge = git hawser smudge %f\n 12   required = true\n 13 [alias]\n 14   po = push origin master",
                "sample": "git config --global --edit",
                "subject": "Git"
            }
        ],
        "Saving Changes": [
            {
                "challenge": "stage all changes in file.txt for the next commit",
                "check": "\\s*git\\s+add\\s+file\\.txt\\s*",
                "module": "Saving Changes",
                "sample": "git add file.txt",
                "subject": "Git"
            },
            {
                "challenge": "Stage all changes in the directory, 'dir', for the next commit",
                "check": "\\s*git\\s+add\\s+dir\\s*",
                "module": "Saving Changes",
                "sample": "git add dir",
                "subject": "Git"
            },
            {
                "challenge": "Open an interactive staging session, where you can choose which changes you want to add to the commit",
                "check": "\\s*git\\s+add\\s+-p\\s*",
                "module": "Saving Changes",
                "output": "-  //Load NPM tasks\n-  require('load-grunt-tasks')(grunt);\n-\n-  /**\n-   * Default Task\n-   */\n-  grunt.hook.push('clean', -9999);\n-  grunt.hook.push('concurrent', 9999);\n-  grunt.hook.push('coffee', -9998)\n-  if (process.env.NODE_ENV === 'production') {\n-    grunt.hook.push('cssmin', 100);\n-    grunt.hook.push('uglify', 200);\n-  }\n-\n-  //Default task.\n-  grunt.registerTask('default', ['hook']);\n-\n-  //Test task.\n-  grunt.registerTask('test', ['env:test', 'mochaTest', 'karma:unit']);\n-\n-  // For Heroku users only.\n-  // Docs: https://github.com/linnovate/mean/wiki/Deploying-on-Heroku\n-  grunt.registerTask('heroku:production', ['cssmin', 'uglify']);\n-};\nStage deletion [y,n,q,a,d,/,?]?",
                "sample": "git add -p",
                "subject": "Git"
            },
            {
                "challenge": "Add all files in the current directory to the next commit",
                "check": "\\s*git\\s+add\\s+\\.\\s*",
                "module": "Saving Changes",
                "sample": "git add .",
                "subject": "Git"
            },
            {
                "challenge": "commit the staged snapshot, using the default text editor to create a message",
                "check": "\\s*commit\\s*",
                "module": "Saving Changes",
                "output": "[detached HEAD 6114060] file\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 file",
                "sample": "commit",
                "subject": "Git"
            },
            {
                "challenge": "commit the staged snapshot with the message 'my updates'",
                "check": "\\s*git\\s+commit\\s+-m\\s+('|\")my updates('|\")\\s*",
                "module": "Saving Changes",
                "output": "[detached HEAD a8f3c18] my updates\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 myfile",
                "sample": "git commit -m 'my updates'",
                "subject": "Git"
            },
            {
                "challenge": "Commit all changes to currently tracked files in the current working directory with the message, 'my changes', assuming none have been added",
                "check": "\\s*git\\s+commit\\s+((-a\\s+)|(-m\\s+('|\")my changes('|\")\\s+))(?!\\1)((-a\\s+)|(-m\\s*('|\")my changes('|\")\\s*))",
                "module": "Saving Changes",
                "output": "[detached HEAD 754569c] my changes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 config/file",
                "sample": "git commit -a -m 'my changes'",
                "subject": "Git"
            },
            {
                "challenge": "List which files are staged, unstaged, and untracked.",
                "check": "\\s*git\\s+status\\s*",
                "module": "Saving Changes",
                "output": "HEAD detached at 5763440\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tdeleted:    Gruntfile.js\n\tmodified:   README.md\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\tunstaged_file",
                "sample": "git status",
                "subject": "Git"
            }
        ],
        "Inspecting a Repository": [
            {
                "challenge": "Display the entire commit history, one screen at a time",
                "check": "\\s*git\\s+log\\s*",
                "module": "Inspecting a Repository",
                "output": "commit 576344077c5a65e67d082db08ec10707f28385e1\nAuthor: Lex CS <lex@lex.com>\nDate:   Thu Mar 19 03:15:21 2015 -0400\n\n    fix conflicts\n\ncommit 0aec0a2a15dfe824599f35cf8945413a5e69d9e7\nAuthor: Lex CS <lex@lex.com>\nDate:   Mon Mar 16 12:45:01 2015 -0400\n\n    revert to home page\n\ncommit 5d63741a32d6330d5c89c686a0cb6fa1c92c8ce8\nAuthor: Lex CS <lex@lex.com>\nDate:   Wed Feb 25 01:09:49 2015 -0500\n\n    add coffeescript and ES6 support\n\ncommit 84c4d7a6d608b5aa94135a2562d7975c4245cba5\nAuthor: Lex CS <lex@lex.com>\nDate:   Tue Feb 24 17:00:54 2015 -0500\n\n    save before trying babel\n\n:",
                "sample": "git log",
                "subject": "Git"
            },
            {
                "challenge": "Display the last 3 commits",
                "check": "\\s*git\\s+log\\s+-n\\s+3\\s*",
                "module": "Inspecting a Repository",
                "output": "commit 576344077c5a65e67d082db08ec10707f28385e1\nAuthor: Lex CS <lex@lex.com>\nDate:   Thu Mar 19 03:15:21 2015 -0400\n\n    fix conflicts\n\ncommit 0aec0a2a15dfe824599f35cf8945413a5e69d9e7\nAuthor: Lex CS <lex@lex.com>\nDate:   Mon Mar 16 12:45:01 2015 -0400\n\n    revert to home page\n\ncommit 5d63741a32d6330d5c89c686a0cb6fa1c92c8ce8\nAuthor: Lex CS <lex@lex.com>\nDate:   Wed Feb 25 01:09:49 2015 -0500\n\n    add coffeescript and ES6 support",
                "sample": "git log -n 3",
                "subject": "Git"
            },
            {
                "challenge": "Display all commits, condensed to one line each",
                "check": "\\s*git\\s+log\\s+--oneline\\s*",
                "module": "Inspecting a Repository",
                "output": "5763440 fix conflicts\n0aec0a2 revert to home page\n5d63741 add coffeescript and ES6 support\n84c4d7a save before trying babel\nfcf20fa initial data modeling\nea878c9 to appease jenna\nb2b6378 data modeling & initial layout for cli\n444d728 new unix package\nc9b96f5 This is just the beginning\nb6b93a7 fix tests\n5d1306d add /api to callback urls\nb545032 remove /api from google api call\n8eff72f add html5 mode meta syntax for google\nfbdbc33 remove hashbang from url\n3a48798 fix conflicts, adjust modRewrite\n5eb7a8d Gzip bower components\nb56fae8 Packages contrib and custom in gitignore\n62e2f3d meanio dependency update\nffe37fd Dependency goes to meanio@0.7.0\n20cf4f7  fix articles updating and menu updating upon login\n8f65349 remove unnecessary options\ncb2f02d Compressed images\n639c723 Resolving merge conflicts ng branch\n07355fd Adding gitignore",
                "sample": "git log --oneline",
                "subject": "Git"
            },
            {
                "challenge": "Display all log information, including which files were altered, and the relative number of lines added/deleted",
                "check": "\\s*git\\s+log\\s+--stat\\s*",
                "module": "Inspecting a Repository",
                "output": "commit 576344077c5a65e67d082db08ec10707f28385e1\nAuthor: Zane Hitchcox <zwhitchcox@gmail.com>\nDate:   Thu Mar 19 03:15:21 2015 -0400\n\n    fix conflicts\n\n packages/custom/cli/public/edit.coffee             |  7 +++--\n packages/custom/cli/public/edit.js                 |  7 +++--\n packages/custom/cli/public/play.coffee             | 14 +++++----\n packages/custom/cli/public/play.js                 | 18 ++++++------\n packages/custom/cli/public/views/create.html       | 23 +++++++++++++--\n packages/custom/cli/public/views/edit.html         | 19 +++++++++++--\n packages/custom/cli/server/models/cli.coffee       |  5 ++--\n .../custom/lex/public/views/edit/exercises.html    | 13 ++++++---\n packages/custom/lex/public/views/home.html         |  9 ++----\n packages/custom/lex/server/exercise.coffee         | 33 ++++++++++++++++++++--\n packages/users/public/tests/auth.spec.js           | 14 ++++-----\n 11 files changed, 114 insertions(+), 48 deletions(-)\n\ncommit 0aec0a2a15dfe824599f35cf8945413a5e69d9e7\nAuthor: Zane Hitchcox <zwhitchcox@gmail.com>\nDate:   Mon Mar 16 12:45:01 2015 -0400\n\n    revert to home page",
                "sample": "git log --stat",
                "subject": "Git"
            },
            {
                "challenge": "Show the patch (full diff) for each commit, screen by screen",
                "check": "\\s*git\\s+log\\s+-p\\s*",
                "module": "Inspecting a Repository",
                "output": "commit 576344077c5a65e67d082db08ec10707f28385e1\nAuthor: Lex CS <lex@lex.com>\nDate:   Thu Mar 19 03:15:21 2015 -0400\n\n    fix conflicts\n\ndiff --git a/packages/custom/cli/public/edit.coffee b/packages/custom/cli/public/edit.coffee\nindex d3bcaf6..c0825ef 100644\n--- a/packages/custom/cli/public/edit.coffee\n+++ b/packages/custom/cli/public/edit.coffee\n@@ -10,7 +10,7 @@ angular.module('mean.cli').controller('CLIExerciseEditController', ['$scope',\n       return $scope.global.isAdmin || challenge.user._id == $scope.global.user._id;\n\n     $scope.val = () ->\n-      return RegExp($scope.exercise.solution).test($scope.exercise.sample)\n+      return RegExp($scope.exercise.check).test($scope.exercise.sample)\n\n     $scope.create = () ->\n       exercise = new CLI(\n@@ -18,9 +18,10 @@ angular.module('mean.cli').controller('CLIExerciseEditController', ['$scope',\n         module: $scope.exercise.module,\n         challenge: $scope.exercise.challenge,\n         output: $scope.exercise.output,\n-        solution: $scope.exercise.solution,",
                "sample": "git log -p",
                "subject": "Git"
            },
            {
                "challenge": "Show all commits from user \"lex\"",
                "check": "\\s*git\\s+log\\s+--author=('|\")?lex('|\")?\\s*",
                "module": "Inspecting a Repository",
                "output": "commit 5eb7a8d621dbbe896611b11abb8f13d80346bdaf\nAuthor: lex <lex@lex.com>\nDate:   Fri Jan 30 19:56:16 2015 +0530\n\n    Gzip bower components\n\ncommit b56fae87c0015a6b78acacb1f0acf22343672e6e\nAuthor: lex <lex@lex.com>\nDate:   Fri Jan 30 19:54:13 2015 +0530\n\n    Packages contrib and custom in gitignore\n\ncommit cb2f02d5d7859bf4c69b05a1dedd6d23e5dd1e69\nAuthor: lex <lex@lex.com>\nDate:   Thu Jan 29 18:36:40 2015 +0530\n\n    Compressed images\n\ncommit 639c723b067e93e14e342f720f9acc07b681e1c2\nMerge: 07355fd c7b9969\nAuthor: lex <lex@lex.com>\nDate:   Thu Jan 29 17:35:42 2015 +0530\n\n    Resolving merge conflicts ng branch",
                "sample": "git log --author=lex",
                "subject": "Git"
            },
            {
                "challenge": "Display all commits with messages starting with 's'",
                "check": "\\s*git\\s+log\\s+--grep=('|\")\\^s\\.\\*('|\")\\s*",
                "module": "Inspecting a Repository",
                "output": "commit 84c4d7a6d608b5aa94135a2562d7975c4245cba5\nAuthor: Zane Hitchcox <zwhitchcox@gmail.com>\nDate:   Tue Feb 24 17:00:54 2015 -0500\n\n    save before trying babel\n\ncommit 54cfa4a2cbd4515c3f94fe0a704dc7af32b7c3b3\nAuthor: Shawn Ward <shawn@devflip.com>\nDate:   Thu Nov 20 11:11:03 2014 -0500\n\n    switching to single quote strings...per jshint.\n\ncommit bcfb6b4bc498519507ddf2d2c99fbaa97a31bee2\nAuthor: Yonatan Ellman <yonatan@nodeside.com>\nDate:   Mon Nov 3 14:12:44 2014 +0200\n\n    start of adding package docs\n\ncommit c71f0f304f812b3fae0cab3f78a81d40468c0f18\nAuthor: Lior Kesos <lior@linnovate.net>\nDate:   Sun Nov 2 01:42:43 2014 +0200\n\n    syntax + coming soon",
                "sample": "git log --grep='^s.*'",
                "subject": "Git"
            },
            {
                "challenge": "Show all commits between c71f0f304f812b3fae0cab3f78a81d40468c0f18 and bcfb6b4bc498519507ddf2d2c99fbaa97a31bee2",
                "check": "\\s*git\\s+log\\s+(c71f0f304f812b3fae0cab3f78a81d40468c0f18)|(c71f0f3)\\s*\\.\\.\\s*(bcfb6b4bc498519507ddf2d2c99fbaa97a31bee2)|(bcfb6b4)\\s*",
                "module": "Inspecting a Repository",
                "output": "commit bcfb6b4bc498519507ddf2d2c99fbaa97a31bee2\nAuthor: Yonatan Ellman <yonatan@nodeside.com>\nDate:   Mon Nov 3 14:12:44 2014 +0200\n\n    start of adding package docs\n\ncommit b4ffde62da8a4fed0ab395774a453b66db42031f\nAuthor: Lior Kesos <lior@linnovate.net>\nDate:   Mon Nov 3 12:19:55 2014 +0200\n\n    fixes\n\ncommit ea0a8fa83e7e40b9ada2670b55823ad52728b314\nAuthor: Lior Kesos <lior@linnovate.net>\nDate:   Mon Nov 3 12:15:41 2014 +0200\n\n    Update README.md\n\ncommit 568ca419d491306f641843a70988929ae6401d0f\nMerge: ef58520 1f9b760\nAuthor: Lior Kesos <lior@linnovate.net>\nDate:   Mon Nov 3 10:11:50 2014 +0200\n\n    Merge pull request #856 from enkodellc/patch-1",
                "sample": "git log c71f0f3..bcfb6b4",
                "subject": "Git"
            },
            {
                "challenge": "Display all commits affecting the file, 'gulpfile.js'",
                "check": "\\s*git\\s+log\\s+gulpfile\\.js\\s*",
                "module": "Inspecting a Repository",
                "output": "commit 0aec0a2a15dfe824599f35cf8945413a5e69d9e7\nAuthor: Zane Hitchcox <zwhitchcox@gmail.com>\nDate:   Mon Mar 16 12:45:01 2015 -0400\n\n    revert to home page\n\ncommit abc011e14661eaa82276ec3eb928f35380569111\nAuthor: Lior Kesos <lior@linnovate.net>\nDate:   Thu Dec 11 18:34:56 2014 +0200\n\n    Revert \"unfortunatly disabling livereload refs #929\"\n\n    This reverts commit cc46833680ff297fd1a3c99cf7a71646ccfa50d8.\n\ncommit cc46833680ff297fd1a3c99cf7a71646ccfa50d8\nAuthor: Lior Kesos <lior@linnovate.net>\nDate:   Thu Dec 11 18:26:09 2014 +0200\n\n    unfortunatly disabling livereload refs #929",
                "sample": "git log gulpfile.js",
                "subject": "Git"
            },
            {
                "challenge": "Show all previous commits, on one line each, with a graph showing the branch history included",
                "check": "\\s*git\\s+log\\s+((--graph\\s+)|(--oneline\\s+))(?!\\1)((--graph)|(--oneline))\\s*",
                "module": "Inspecting a Repository",
                "output": "* 8eff72f add html5 mode meta syntax for google\n* fbdbc33 remove hashbang from url\n*   3a48798 fix conflicts, adjust modRewrite\n|\\\n| * 5eb7a8d Gzip bower components\n| * b56fae8 Packages contrib and custom in gitignore\n| * 62e2f3d meanio dependency update\n| * ffe37fd Dependency goes to meanio@0.7.0\n| * cb2f02d Compressed images\n| *   639c723 Resolving merge conflicts ng branch\n| |\\\n| | * c7b9969 removing aggregateAsset of a non-existing file in the users package\n| | * 7d4a183 npm test satisfied\n| | *   61f3a09 After merge with the master branch\n| | |\\\n| | * | e708e20 Article testing improved\n| | * | 8672da0 temporary npm dependency to the ng branch of meanio - thanks to @pratik60\n| | * | 7e6b814 meanio postinstall is out\n| | * |   2347245 after merge\n| | |\\ \\\n| | * | | be7f0b7 merge\n| | * | |   cf0cfad after merge with master\n| | |\\ \\ \\\n| | * | | | 84adc86 with mean.json files per package",
                "sample": "git log --graph --oneline",
                "subject": "Git"
            },
            {
                "challenge": "Show a full diff all all changes any user with a name starting with the letter t has made to the directory 'packages",
                "check": "\\s*git\\s+log\\s+((--author=(\"|')\\^t\\.\\*('|\")\\s+)|(-p\\s+))(?!\\1)((--author=(\"|')\\^t\\.\\*('|\")\\s+)|(-p\\s+))packages\\s*",
                "module": "Inspecting a Repository",
                "output": "commit 7c054220663562de157fea5134a32e470b6fd708\nAuthor: Brock McKean <bmckean@localhost.localdomain>\nDate:   Wed Jan 21 07:26:10 2015 -0500\n\n    Fixes remaining travis errors on Articles update and remove\n\ndiff --git a/packages/articles/public/controllers/articles.js b/packages/articles/public/controllers/articles.js\nindex ada7583..5bc6298 100644\n--- a/packages/articles/public/controllers/articles.js\n+++ b/packages/articles/public/controllers/articles.js\n@@ -31,8 +31,9 @@ angular.module('mean.articles').controller('ArticlesController', ['$scope', '$st\n       if (article) {\n         article.$remove(function(response) {\n           for (var i in $scope.articles) {\n-            if (vm.articles[i] === article) {\n-              vm.articles.splice(i, 1);\n+            if ($scope.articles[i] === article) {\n+             $scope.articles.splice(i,1);\n+             //vm.articles = $scope.articles;\n             }\n           }\n           $location.path('articles');\n@@ -46,10 +47,10 @@ angular.module('mean.articles').controller('ArticlesController', ['$scope', '$st",
                "sample": "git log --author=\"^t.*\" -p packages",
                "subject": "Git"
            },
            {
                "challenge": "Show all of the commits that are in master that are not in 576344077c5a65e67d082db08ec10707f28385e1 on one line",
                "check": "\\s*git\\s+log\\s+--oneline\\s+(576344077c5a65e67d082db08ec10707f28385e1)|(5763440)\\s*\\.\\.\\s*master\\s*",
                "module": "Inspecting a Repository",
                "output": "7a4d128 Merge branch 'newbranch'\n8fb305d delete gruntfile\n53ecdcf fix conflicts",
                "sample": "git log --oneline 5763440..master",
                "subject": "Git"
            }
        ],
        "Viewing Old Commits": [
            {
                "challenge": "Checkout the master branch",
                "check": "\\s*git\\s+checkout\\s+master\\s*",
                "module": "Viewing Old Commits",
                "output": "Switched to branch 'master'",
                "sample": "git checkout master",
                "subject": "Git"
            },
            {
                "challenge": "checkout the version of 'gulpfile.js' from the commit '576344077c5a65e67d082db08ec10707f28385e1'",
                "check": "\\s*git\\s+checkout\\s+(576344077c5a65e67d082db08ec10707f28385e1)|(5763440)\\s+gulpfile\\.js\\s*",
                "module": "Viewing Old Commits",
                "sample": "git checkout 5763440 gulpfile.js",
                "subject": "Git"
            },
            {
                "challenge": "Check out the commit 576344077c5a65e67d082db08ec10707f28385e1",
                "check": "\\s*git\\s+checkout\\s+(576344077c5a65e67d082db08ec10707f28385e1)|(5763440)\\s*",
                "module": "Viewing Old Commits",
                "sample": "git checkout 5763440",
                "subject": "Git"
            },
            {
                "challenge": "Show previous commits on one line",
                "check": "\\s*git\\s+log\\s+--oneline\\s*",
                "module": "Viewing Old Commits",
                "output": "7a4d128 Merge branch 'newbranch'\n8fb305d delete gruntfile\n53ecdcf fix conflicts\n5763440 fix conflicts\n0aec0a2 revert to home page\n5d63741 add coffeescript and ES6 support\n84c4d7a save before trying babel\nfcf20fa initial data modeling\nea878c9 to appease jenna\nb2b6378 data modeling & initial layout for cli\n444d728 new unix package\nc9b96f5 This is just the beginning\nb6b93a7 fix tests\n5d1306d add /api to callback urls\nb545032 remove /api from google api call\n8eff72f add html5 mode meta syntax for google\nfbdbc33 remove hashbang from url\n3a48798 fix conflicts, adjust modRewrite\n5eb7a8d Gzip bower components\nb56fae8 Packages contrib and custom in gitignore\n62e2f3d meanio dependency update\nffe37fd Dependency goes to meanio@0.7.0\n20cf4f7  fix articles updating and menu updating upon login\n8f65349 remove unnecessary options",
                "sample": "git log --oneline",
                "subject": "Git"
            },
            {
                "challenge": "Switch to the commit that added coffeescript and ES6 support (5d63741)",
                "check": "\\s*git\\s+checkout\\s+5d63741\\s*",
                "module": "Viewing Old Commits",
                "output": "Note: checking out '5d63741'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 5d63741... add coffeescript and ES6 support",
                "sample": "git checkout 5d63741",
                "subject": "Git"
            },
            {
                "challenge": "Return gulpfile.js to the current version of your project",
                "check": "\\s*git\\s+checkout\\s+HEAD\\s+gulpfile\\.js\\s*",
                "module": "Viewing Old Commits",
                "sample": "git checkout HEAD gulpfile.js",
                "subject": "Git"
            }
        ],
        "Undoing Changes": [
            {
                "challenge": "Generate a commit with all changes made in 5d63741a32d6330d5c89c686a0cb6fa1c92c8ce8 undone",
                "check": "\\s*git\\s+revert\\s+(5d63741a32d6330d5c89c686a0cb6fa1c92c8ce8)|(5d63741)\\s*",
                "module": "Undoing Changes",
                "output": "[master a49212c] Revert \"add coffeescript and ES6 support\"\n 6 files changed, 42 insertions(+)",
                "sample": "git revert 5d63741",
                "subject": "Git"
            },
            {
                "challenge": "create a commit with all the changes made in the last commit undone",
                "check": "\\s*git\\s+revert\\s+HEAD\\s*",
                "module": "Undoing Changes",
                "output": "[master 333f6b0] Revert \"change\"\n 6 files changed, 41 deletions(-)",
                "sample": "git revert HEAD",
                "subject": "Git"
            },
            {
                "challenge": "Unstage the file gulpfile.js without overwriting any changes to the working directory",
                "check": "\\s*git\\s+reset\\s+gulpfile\\.js\\s*",
                "module": "Undoing Changes",
                "output": "Unstaged changes after reset:\nM\tgulpfile.js",
                "sample": "git reset gulpfile.js",
                "subject": "Git"
            },
            {
                "challenge": "Remove all files from the staging area, leaving the working directory unchanged",
                "check": "\\s*git\\s+reset\\s*",
                "module": "Undoing Changes",
                "output": "Unstaged changes after reset:\nD\tGruntfile.js\nD\tes5/traceur_runtime.js\nM\tgulpfile.js",
                "sample": "git reset",
                "subject": "Git"
            },
            {
                "challenge": "Destructively overwrite any changes you have made since the last commit\nCaution: You can't get this back",
                "check": "\\s*git\\s+reset\\s+--hard\\s*",
                "module": "Undoing Changes",
                "output": "HEAD is now at 333f6b0 Revert \"something\"",
                "sample": "git reset --hard",
                "subject": "Git"
            },
            {
                "challenge": "Move the branch tip to 333f6b084b89026f1da19ff0972b8e6b511fe575, keeping the working directory the same",
                "check": "\\s*git\\s+reset\\s+(333f6b084b89026f1da19ff0972b8e6b511fe575)|(333f6b0)\\s*",
                "module": "Undoing Changes",
                "output": "Unstaged changes after reset:\nD\tGruntfile.js\nM\tpackages/custom/algos/app.js\nM\tpackages/custom/langs/app.js\nM\tpackages/custom/lex/public/views/home.html\nM\tpackages/users/public/views/register.html\nM\tpackages/users/server/models/user.js",
                "sample": "git reset 333f6b0",
                "subject": "Git"
            },
            {
                "challenge": "Reset your working directory and set the current branch tip to 333f6b084b89026f1da19ff0972b8e6b511fe575, destructively",
                "check": "\\s*git\\s+reset\\s+--hard\\s+(333f6b084b89026f1da19ff0972b8e6b511fe575)|(333f6b)\\s*",
                "module": "Undoing Changes",
                "output": "HEAD is now at 333f6b0 Revert \"something\"",
                "sample": "git reset --hard 333f6b",
                "subject": "Git"
            },
            {
                "challenge": "add foo.py to your staging area",
                "check": "\\s*git\\s+add\\s+foo\\.py\\s*",
                "module": "Undoing Changes",
                "sample": "git add foo.py",
                "subject": "Git"
            },
            {
                "challenge": "commit your changes with the message 'start a new crazy feature'",
                "check": "\\s*git\\s+commit\\s+-m\\s+(\"|')start a new crazy feature(\"|')\\s*",
                "module": "Undoing Changes",
                "output": "[detached HEAD c8c4e04] start a new crazy feature\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 foo.py",
                "sample": "git commit -m 'start a new crazy feature'",
                "subject": "Git"
            },
            {
                "challenge": "Now, assuming you have changed foo.py, and some other files (that were already being tracked), commit another snapshot with the message 'continue crazy feature'",
                "check": "\\s*git\\s+commit\\s+((-a\\s+)|(-m\\s+('|\")continue crazy feature('|\")\\s+))(?!\\1)((-a\\s*)|(-m\\s+('|\")continue crazy feature('|\")\\s*))",
                "module": "Undoing Changes",
                "output": "[detached HEAD 57aa22e] continue my crazy feature\n 2 files changed, 4 insertions(+)",
                "sample": "git commit -a -m 'continue crazy feature'",
                "subject": "Git"
            },
            {
                "challenge": "Deciding to scrap your crazy feature, remove the last two commits, permanently",
                "check": "\\s*git\\s+reset\\s+--hard\\s+HEAD~2\\s*",
                "module": "Undoing Changes",
                "output": "HEAD is now at 333f6b0 Revert \"message\"",
                "sample": "git reset --hard HEAD~2",
                "subject": "Git"
            },
            {
                "challenge": "Show which files would be removed by 'git clean'",
                "check": "\\s*git\\s+clean\\s+-n\\s*",
                "module": "Undoing Changes",
                "output": "Would remove file.py\nWould remove newfile",
                "sample": "git clean -n",
                "subject": "Git"
            },
            {
                "challenge": "Remove all untracked files from the current directory",
                "check": "\\s*git\\s+clean\\s+-f\\s*",
                "module": "Undoing Changes",
                "output": "Removing file.py\nRemoving newfile",
                "sample": "git clean -f",
                "subject": "Git"
            },
            {
                "challenge": "Remove untracked files from the directory 'mydir'",
                "check": "\\s*git\\s+clean\\s+-f\\s+mydir\\s*",
                "module": "Undoing Changes",
                "output": "Removing mydir/myfile",
                "sample": "git clean -f mydir",
                "subject": "Git"
            },
            {
                "challenge": "Remove untracked files and directories from the current path",
                "check": "\\s*git\\s+clean\\s+-([fd])(?!\\1)([fd])\\s*",
                "module": "Undoing Changes",
                "output": "Removing mydir/\nRemoving myfile\nRemoving packages/custom/algos/public/directives/\nRemoving packages/custom/algos/server/config/\nRemoving packages/custom/algos/server/controllers/",
                "sample": "git clean -fd",
                "subject": "Git"
            },
            {
                "challenge": "Remove any untracked files and files that git usually ignores",
                "check": "\\s*git\\s+clean\\s+-([xf])(?!\\1)([xf])\\s*",
                "module": "Undoing Changes",
                "output": "Removing .DS_Store\nRemoving packages/custom/.DS_Store\nRemoving packages/custom/cli/.DS_Store\nRemoving packages/custom/cli/public/assets/.DS_Store",
                "sample": "git clean -xf",
                "subject": "Git"
            }
        ],
        "Rewriting History": [
            {
                "challenge": "Change the previous commit's message to 'initial commit'",
                "check": "\\s*git\\s+commit\\s+((--amend\\s+)|(-m\\s+(\"|')initial commit(\"|')\\s+))(?!\\1)((--amend)|(-m\\s+(\"|')initial commit(\"|')))",
                "module": "Rewriting History",
                "output": "",
                "sample": "git commit --amend -m 'initial commit'",
                "subject": "Git"
            },
            {
                "challenge": "Replace the previous commit with all staged changes combined with the previous commit, changing the commit message",
                "check": "s*git\\s+commit\\s+--amend\\s*",
                "module": "Rewriting History",
                "output": "",
                "sample": "git commit --amend",
                "subject": "Git"
            },
            {
                "challenge": "Add all staged changes to the previous commit, without changing the original commit message",
                "check": "\\s*git\\s+commit\\s+((--amend\\s+)|(--no-edit\\s+))(?!\\1)((--amend)|(--no-edit))\\s*",
                "module": "Rewriting History",
                "output": "",
                "sample": "git commit --amend --no-edit",
                "subject": "Git"
            },
            {
                "challenge": "Move the current branch to the 'master' branch (from its previous home, an earlier version of the master branch)",
                "check": "\\s*git\\s+rebase\\s+master\\s*",
                "module": "Rewriting History",
                "output": "____\n__/_______\n\nnow       _____\n_________/",
                "sample": "git rebase master",
                "subject": "Git"
            },
            {
                "challenge": "Create a branch, 'new-feature', simultaneously switching to that branch",
                "check": "\\s*git\\s+checkout\\s+-b\\s+new-feature\\s*",
                "module": "Rewriting History",
                "output": "Switched to a new branch 'new-feature'",
                "sample": "git checkout -b new-feature",
                "subject": "Git"
            },
            {
                "challenge": "Append the world 'hello' to the end of file, 'file1'",
                "check": "\\s*echo\\s+('|\")?hello('|\")?\\s+>>\\s+file1\\s*",
                "module": "Rewriting History",
                "sample": "echo hello >> file1",
                "subject": "Git"
            },
            {
                "challenge": "Commit your changes with the message, \"Start developing a feature\"",
                "check": "\\s*git\\s+commit\\s+((-a\\s+)|(-m\\s+(\"|')Start developing A feature(\"|'))\\s+)(?!\\1)((-a)|(-m\\s+(\"|')Start developing a feature(\"|')))",
                "module": "Rewriting History",
                "output": "[new-feature 663b820] Start developing a feature\n 1 file changed, 1 insertion(+)",
                "sample": "git commit -a -m \"Start developing a feature\"",
                "subject": "Git"
            },
            {
                "challenge": "Create and checkout a branch called 'hotflix' based off of master",
                "check": "\\s*git\\s+checkout\\s+-b\\s+hotflix\\s+master\\s*",
                "module": "Rewriting History",
                "output": "Switched to a new branch 'hotfix'",
                "sample": "git checkout -b hotflix master",
                "subject": "Git"
            },
            {
                "challenge": "Append 'hell no' to file2",
                "check": "\\s*echo\\s+('|\")hell no('|\")\\s+>>\\s+file2\\s*",
                "module": "Rewriting History",
                "sample": "echo 'hell no' >> file2",
                "subject": "Git"
            },
            {
                "challenge": "Commit changes to tracked files with the message \"Fixed security hole\"",
                "check": "\\s*git\\s+commit\\s+((-a\\s+)|(-m\\s+(\"|')Fixed security hole(\"|'))\\s+)(?!\\1)((-a)|(-m\\s+(\"|')Fixed security hole(\"|')))\\s*",
                "module": "Rewriting History",
                "output": "[hotfix f15ebc5] Fix security hole\n 1 file changed, 1 insertion(+)",
                "sample": "git commit -a -m \"Fixed security hole\"",
                "subject": "Git"
            },
            {
                "challenge": "Checkout the master branch",
                "check": "\\s*git\\s+checkout\\s+master",
                "module": "Rewriting History",
                "output": "Switched to branch 'master'",
                "sample": "git checkout master",
                "subject": "Git"
            },
            {
                "challenge": "Merge the hotflix branch",
                "check": "\\s*git\\s+merge\\s+hotflix\\s*",
                "module": "Rewriting History",
                "output": "Updating f394aa9..f15ebc5\nFast-forward\n file2 | 1 +\n 1 file changed, 1 insertion(+)",
                "sample": "git merge hotflix",
                "subject": "Git"
            },
            {
                "challenge": "Delete the 'hotflix' branch",
                "check": "\\s*git\\s+branch\\s+-d\\s+hotflix\\s*",
                "module": "Rewriting History",
                "output": "Deleted branch hotfix (was f15ebc5).",
                "sample": "git branch -d hotflix",
                "subject": "Git"
            },
            {
                "challenge": "Checkout the new-feature branch",
                "check": "\\s*git\\s+checkout\\s+new-feature\\s*",
                "module": "Rewriting History",
                "output": "Switched to branch 'new-feature'",
                "sample": "git checkout new-feature",
                "subject": "Git"
            },
            {
                "challenge": "Rebase the new-feature branch (on which you currently are) on master",
                "check": "\\s*git\\s+rebase\\s+master\\s*",
                "module": "Rewriting History",
                "output": "First, rewinding head to replay your work on top of it...\nApplying: Start developing a feature",
                "sample": "git rebase master",
                "subject": "Git"
            },
            {
                "challenge": "Checkout the master branch",
                "check": "\\s*git\\s+checkout\\s+master\\s*",
                "module": "Rewriting History",
                "output": "Switched to branch 'master'",
                "sample": "git checkout master",
                "subject": "Git"
            },
            {
                "challenge": "Merge the new-feature branch",
                "check": "\\s*git\\s+merge\\s+new-feature\\s*",
                "module": "Rewriting History",
                "output": "Updating f15ebc5..a1c4a4a\nFast-forward\n file1 | 1 +\n 1 file changed, 1 insertion(+)",
                "sample": "git merge new-feature",
                "subject": "Git"
            },
            {
                "challenge": "Start an interactive session to rebase your current branch on master",
                "check": "\\s*git\\s+rebase\\s+-i\\s+master\\s*",
                "module": "Rewriting History",
                "output": "pick 32618c4 Start developing a feature\npick 62eed47 Fix something from the previous commit\n\n# Rebase 23746e8..ac5874f onto 23746e8\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like \"squash\", but discard this commit's log message\n#  x, exec = run command (the rest of the line) using shell\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n\nHint: here you could use squash instead of pick to combine the two commits, like this:\n\npick 32618c4 Start developing a feature\nsquash 62eed47 Fix something from the previous commit",
                "sample": "git rebase -i master",
                "subject": "Git"
            },
            {
                "challenge": "Show the reflog for the current repository",
                "check": "\\s*git\\s+reflog\\s*",
                "module": "Rewriting History",
                "output": "1c3d78b HEAD@{0}: rebase: checkout master\nae25586 HEAD@{1}: checkout: moving from master to new-feature\n1c3d78b HEAD@{2}: merge hotflix: Fast-forward\n333f6b0 HEAD@{3}: checkout: moving from hotflix to master\n1c3d78b HEAD@{4}: commit: Fix security hole\n333f6b0 HEAD@{5}: checkout: moving from new-feature to hotflix\nae25586 HEAD@{6}: commit: start developing a new feature\n333f6b0 HEAD@{7}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6b511fe575\n333f6b0 HEAD@{8}: reset: moving to HEAD~2\n57aa22e HEAD@{9}: commit: continue my crazy feature\nc8c4e04 HEAD@{10}: commit: start developing a crazy feature\n333f6b0 HEAD@{11}: checkout: moving from master to 333f6b0\n333f6b0 HEAD@{12}: reset: moving to 333f6b084b89026f1da19ff0972b8e6b511fe575\necb0c30 HEAD@{13}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6b511fe57\n333f6b0 HEAD@{14}: checkout: moving from master to 333f6b084b89026f1da19ff0972b8\necb0c30 HEAD@{15}: commit: new commit\n333f6b0 HEAD@{16}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6b511fe57\n333f6b0 HEAD@{17}: reset: moving to master\n795d640 HEAD@{18}: reset: moving to 795d640a35f4e0633db0d2845250fd5149ffa118\n333f6b0 HEAD@{19}: checkout: moving from 795d640a35f4e0633db0d2845250fd5149ffa11\n795d640 HEAD@{20}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6b511fe57\n333f6b0 HEAD@{21}: checkout: moving from master to 333f6b084b89026f1da19ff0972b8\n333f6b0 HEAD@{22}: revert: Revert \"something\"\n795d640 HEAD@{23}: commit: something",
                "sample": "git reflog",
                "subject": "Git"
            },
            {
                "challenge": "Show the reflog with the relative date information",
                "check": "\\s*git\\s+reflog\\s+--interactive-date\\s*",
                "module": "Rewriting History",
                "output": "1c3d78b HEAD@{2 hours ago}: rebase: checkout master\nae25586 HEAD@{3 hours ago}: checkout: moving from master to new-feature\n1c3d78b HEAD@{3 hours ago}: merge hotflix: Fast-forward\n333f6b0 HEAD@{3 hours ago}: checkout: moving from hotflix to master\n1c3d78b HEAD@{3 hours ago}: commit: Fix security hole\n333f6b0 HEAD@{3 hours ago}: checkout: moving from new-feature to hotflix\nae25586 HEAD@{3 hours ago}: commit: start developing a new feature\n333f6b0 HEAD@{3 hours ago}: checkout: moving from 333f6b084b89026f1da19ff0972b8e\n333f6b0 HEAD@{5 days ago}: reset: moving to HEAD~2\n57aa22e HEAD@{5 days ago}: commit: continue my crazy feature\nc8c4e04 HEAD@{5 days ago}: commit: start developing a crazy feature\n333f6b0 HEAD@{5 days ago}: checkout: moving from master to 333f6b0\n333f6b0 HEAD@{5 days ago}: reset: moving to 333f6b084b89026f1da19ff0972b8e6b511f\necb0c30 HEAD@{5 days ago}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6\n333f6b0 HEAD@{5 days ago}: checkout: moving from master to 333f6b084b89026f1da19\necb0c30 HEAD@{5 days ago}: commit: new commit\n333f6b0 HEAD@{5 days ago}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6\n333f6b0 HEAD@{5 days ago}: reset: moving to master\n795d640 HEAD@{5 days ago}: reset: moving to 795d640a35f4e0633db0d2845250fd5149ff\n333f6b0 HEAD@{5 days ago}: checkout: moving from 795d640a35f4e0633db0d2845250fd5\n795d640 HEAD@{5 days ago}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6\n333f6b0 HEAD@{5 days ago}: checkout: moving from master to 333f6b084b89026f1da19\n333f6b0 HEAD@{6 days ago}: revert: Revert \"something\"\n795d640 HEAD@{6 days ago}: commit: something",
                "sample": "git reflog --interactive-date",
                "subject": "Git"
            },
            {
                "challenge": "Show the git log, including every time the head changed",
                "check": "\\s*git\\s+reflog\\s*",
                "module": "Rewriting History",
                "output": "1c3d78b HEAD@{0}: rebase: checkout master\nae25586 HEAD@{1}: checkout: moving from master to new-feature\n1c3d78b HEAD@{2}: merge hotflix: Fast-forward\n333f6b0 HEAD@{3}: checkout: moving from hotflix to master\n1c3d78b HEAD@{4}: commit: Fix security hole\n333f6b0 HEAD@{5}: checkout: moving from new-feature to hotflix\nae25586 HEAD@{6}: commit: start developing a new feature\n333f6b0 HEAD@{7}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6b511fe575\n333f6b0 HEAD@{8}: reset: moving to HEAD~2\n57aa22e HEAD@{9}: commit: continue my crazy feature\nc8c4e04 HEAD@{10}: commit: start developing a crazy feature\n333f6b0 HEAD@{11}: checkout: moving from master to 333f6b0\n333f6b0 HEAD@{12}: reset: moving to 333f6b084b89026f1da19ff0972b8e6b511fe575\necb0c30 HEAD@{13}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6b511fe57\n333f6b0 HEAD@{14}: checkout: moving from master to 333f6b084b89026f1da19ff0972b8\necb0c30 HEAD@{15}: commit: new commit\n333f6b0 HEAD@{16}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6b511fe57\n333f6b0 HEAD@{17}: reset: moving to master\n795d640 HEAD@{18}: reset: moving to 795d640a35f4e0633db0d2845250fd5149ffa118\n333f6b0 HEAD@{19}: checkout: moving from 795d640a35f4e0633db0d2845250fd5149ffa11\n795d640 HEAD@{20}: checkout: moving from 333f6b084b89026f1da19ff0972b8e6b511fe57\n333f6b0 HEAD@{21}: checkout: moving from master to 333f6b084b89026f1da19ff0972b8\n333f6b0 HEAD@{22}: revert: Revert \"something\"\n795d640 HEAD@{23}: commit: something",
                "sample": "git reflog",
                "subject": "Git"
            }
        ],
        "Syncing": [
            {
                "challenge": "Show your remote connections",
                "check": "\\s*git\\s+remote\\s*",
                "module": "Syncing",
                "output": "main\norigin",
                "sample": "git remote",
                "subject": "Git"
            },
            {
                "challenge": "Show the remote connections for your current repository, including the url info",
                "check": "\\s*git\\s+remote\\s+-v\\s*",
                "module": "Syncing",
                "output": "origin\thttps://github.com/zwhitchcox/lex (fetch)\norigin\thttps://github.com/zwhitchcox/lex (push)",
                "sample": "git remote -v",
                "subject": "Git"
            },
            {
                "challenge": "Add a new connection called 'mean' with the url 'https://github.com/linnovate/mean'",
                "check": "\\s*git\\s+remote\\s+add\\s+mean\\s+https:\\/\\/github\\.com\\/linnovate\\/mean\\s*",
                "module": "Syncing",
                "sample": "git remote add mean https://github.com/linnovate/mean",
                "subject": "Git"
            },
            {
                "challenge": "Remove the remote connection, 'mean'",
                "check": "\\s*git\\s+remote\\s+rm\\s+mean\\s*",
                "module": "Syncing",
                "sample": "git remote rm mean",
                "subject": "Git"
            },
            {
                "challenge": "Rename the remote connection, 'origin', to 'lex'",
                "check": "\\s*git\\s+remote\\s+rename\\s+origin\\s+lex\\s*",
                "module": "Syncing",
                "sample": "git remote rename origin lex",
                "subject": "Git"
            },
            {
                "challenge": "Fetch all branches/commits from the remote repository, 'mean'",
                "check": "\\s*git\\s+fetch\\s+mean\\s*",
                "module": "Syncing",
                "output": "remote: Counting objects: 1426, done.\nremote: Compressing objects: 100% (198/198), done.\nremote: Total 1426 (delta 180), reused 77 (delta 77), pack-reused 1149\nReceiving objects: 100% (1426/1426), 1.80 MiB | 320.00 KiB/s, done.\nResolving deltas: 100% (502/502), done.\nFrom https://github.com/linnovate/mean\n * [new branch]      0.4.0      -> mean/0.4.0\n * [new branch]      0.5        -> mean/0.5\n * [new branch]      2gulp      -> mean/2gulp\n * [new branch]      aggregation1 -> mean/aggregation1\n * [new branch]      config     -> mean/config\n * [new branch]      config-fs  -> mean/config-fs\n * [new branch]      drypass    -> mean/drypass\n * [new branch]      dynamic-dropdown -> mean/dynamic-dropdown\n * [new branch]      explode    -> mean/explode\n * [new branch]      gh-pages   -> mean/gh-pages\n * [new branch]      master     -> mean/master\n * [new branch]      meansplit  -> mean/meansplit\n * [new branch]      menus      -> mean/menus\n * [new branch]      ng         -> mean/ng\n * [new branch]      nogrunt    -> mean/nogrunt\n * [new branch]      sep-config -> mean/sep-config\n * [new tag]         v0.4.3     -> v0.4.3\n * [new tag]         v0.4.4     -> v0.4.4",
                "sample": "git fetch mean",
                "subject": "Git"
            },
            {
                "challenge": "Fetch all commits and files from branch 'explode' in remote repository, 'mean'",
                "check": "\\s*git\\s+fetch\\s+mean\\s+explode\\s*",
                "module": "Syncing",
                "output": "From https://github.com/linnovate/mean\n * branch            explode    -> FETCH_HEAD",
                "sample": "git fetch mean explode",
                "subject": "Git"
            },
            {
                "challenge": "Show all remote branches",
                "check": "\\s*git\\s+remote\\s+-r\\s*",
                "module": "Syncing",
                "output": "mean/0.4.0\n  mean/0.5\n  mean/2gulp\n  mean/aggregation1\n  mean/config\n  mean/config-fs\n  mean/drypass\n  mean/dynamic-dropdown\n  mean/explode\n  mean/gh-pages\n  mean/master\n  mean/meansplit\n  mean/menus\n  mean/ng\n  mean/nogrunt\n  mean/sep-config\n  origin/master",
                "sample": "git remote -r",
                "subject": "Git"
            },
            {
                "challenge": "Merge the branch of the remote repository, 'origin' to your current branch",
                "check": "\\s*git\\s+merge\\s+origin\\/master\\s*",
                "module": "Syncing",
                "output": "Auto-merging packages/system/public/views/header.html\nCONFLICT (content): Merge conflict in packages/system/public/views/header.html\nAuto-merging packages/system/public/routes/system.js\nCONFLICT (content): Merge conflict in packages/system/public/routes/system.js\nAuto-merging packages/system/public/controllers/header.js\nAuto-merging packages/system/app.js\nAutomatic merge failed; fix conflicts and then commit the result.",
                "sample": "git merge origin/master",
                "subject": "Git"
            },
            {
                "challenge": "Fetch and automatically merge the 'master' branch of the remote repository, 'mean'",
                "check": "\\s*git\\s+pull\\s+mean\\s+master\\s*",
                "module": "Syncing",
                "output": "Auto-merging config/env/production.js\nAuto-merging config/env/development.js\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nCONFLICT (modify/delete): Gruntfile.js deleted in a5f645a8e7fb56b55e78af38a5e930e06fb9414f and modified in HEAD. Version HEAD of Gruntfile.js left in tree.\nAuto-merging .gitignore\nAutomatic merge failed; fix conflicts and then commit the result.",
                "sample": "git pull mean master",
                "subject": "Git"
            },
            {
                "challenge": "Rebase your current branch on the  'master' branch of the remote repository, 'mean'",
                "check": "\\s*git\\s+pull\\s+--rebase\\s+mean\\s+master\\s*",
                "module": "Syncing",
                "output": "From https://github.com/linnovate/mean\n * branch            master     -> FETCH_HEAD\nFirst, rewinding head to replay your work on top of it...\nApplying: add prettify urls and implement seo\nApplying: beautify urls and implement seo\nUsing index info to reconstruct a base tree...\nAuto-merging config/express.js\nAuto-merging config/env/development.js\nAuto-merging .gitignore\nCONFLICT (add/add): Merge conflict in .gitignore\nFailed to merge in the changes.\nPatch failed at 0002 beautify urls and implement seo\nThe copy of the patch that failed is found in:\n   /Users/zane/Developer/lex 2/.git/rebase-apply/patch\n\nWhen you have resolved this problem, run \"git rebase --continue\".\nIf you prefer to skip this patch, run \"git rebase --skip\" instead.\nTo check out the original branch and stop rebasing, run \"git rebase --abort\".",
                "sample": "git pull --rebase mean master",
                "subject": "Git"
            },
            {
                "challenge": "Configure git to automatically rebase instead of merge, whenever you pull",
                "check": "\\s*git\\s+config\\s+--global\\s+branch\\.autosetuprebase\\s+always\\s*",
                "module": "Syncing",
                "sample": "git config --global branch.autosetuprebase always",
                "subject": "Git"
            },
            {
                "challenge": "push your changes to the 'master' branch of the remote repository, 'mean',",
                "check": "\\s*git\\s+push\\s+lex\\s+master\\s*",
                "module": "Syncing",
                "output": "Counting objects: 3, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (2/2), 231 bytes | 0 bytes/s, done.\nTotal 2 (delta 1), reused 0 (delta 0)\nTo https://github.com/zwhitchcox/lex\n   7a4d128..742d168  master -> master",
                "sample": "git push lex master",
                "subject": "Git"
            },
            {
                "challenge": "Push your current branch to the remote repository, 'main', even though, you have merge conflicts",
                "check": "\\s*git\\s+push\\s+((main\\s+)|(--force\\s+))(?!\\1)((main)|(--force))\\s*",
                "module": "Syncing",
                "output": "Counting objects: 7511, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (3399/3399), done.\nWriting objects: 100% (7511/7511), 6.96 MiB | 12.80 MiB/s, done.\nTotal 7511 (delta 3759), reused 6878 (delta 3514)\nTo /Users/zane/test\n + 30ddae5...87fd6c3 master -> master (forced update)",
                "sample": "git push main --force",
                "subject": "Git"
            },
            {
                "challenge": "Push all branches to the remote repository, 'main'",
                "check": "\\s*git\\s+push\\s+((main\\s+)|(--all\\s+))(?!\\1)((main)|(--all))\\s*",
                "module": "Syncing",
                "output": "Total 0 (delta 0), reused 0 (delta 0)\nTo /Users/zane/Developer/gittest/\n * [new branch]      allthebranches -> allthebranches\n * [new branch]      anotherbranc -> anotherbranc\n * [new branch]      mybranch -> mybranch",
                "sample": "git push main --all",
                "subject": "Git"
            },
            {
                "challenge": "Push to 'main', including all tags",
                "check": "\\s*git\\s+push\\s+main\\s+--tags\\s*",
                "module": "Syncing",
                "output": "Total 0 (delta 0), reused 0 (delta 0)\nTo /Users/zane/Developer/gittest/\n * [new tag]         v0.3.0 -> v0.3.0\n * [new tag]         v0.3.1 -> v0.3.1\n * [new tag]         v0.3.2 -> v0.3.2\n * [new tag]         v0.3.3 -> v0.3.3\n * [new tag]         v0.4.0 -> v0.4.0\n * [new tag]         v0.4.1 -> v0.4.1\n * [new tag]         v0.4.2 -> v0.4.2",
                "sample": "git push main --tags",
                "subject": "Git"
            }
        ],
        "Using Branches": [
            {
                "challenge": "List all of the branches in your repository.",
                "check": "\\s*git\\s+branch\\s*",
                "module": "Using Branches",
                "output": "* allthebranches\n  anotherbranc\n  master\n  mybranch",
                "sample": "git branch",
                "subject": "Git"
            },
            {
                "challenge": "Delete the branch, 'terriblebranch'",
                "check": "\\s*git\\s+branch\\s+-d\\s+terriblebranch\\s*",
                "module": "Using Branches",
                "output": "Deleted branch mybranch (was 87a24bb).",
                "sample": "git branch -d terriblebranch",
                "subject": "Git"
            },
            {
                "challenge": "Delete the branch, 'stupidbranch', even if it has unmerged changes",
                "check": "\\s*git\\s+branch\\s+-D\\s+stupidbranch\\s*",
                "module": "Using Branches",
                "output": "Deleted branch stupidbranch (was 1c58573).",
                "sample": "git branch -D stupidbranch",
                "subject": "Git"
            },
            {
                "challenge": "Rename the current branch to 'sexybranch'",
                "check": "\\s*git\\s+branch\\s+-m\\s+sexybranch\\s*",
                "module": "Using Branches",
                "sample": "git branch -m sexybranch",
                "subject": "Git"
            },
            {
                "challenge": "checkout the branch, 'awesomebranch'",
                "check": "\\s*git\\s+checkout\\s+awesomebranch\\s*",
                "module": "Using Branches",
                "output": "Switched to branch 'awesomebranch'\nYour branch is up-to-date with 'origin/awesomebranch'.",
                "sample": "git checkout awesomebranch",
                "subject": "Git"
            },
            {
                "challenge": "Checkout while creating branch, 'experimental'",
                "check": "\\s*git\\s+checkout\\s+-b\\s+experimental\\s*",
                "module": "Using Branches",
                "output": "Switched to a new branch 'experimental'",
                "sample": "git checkout -b experimental",
                "subject": "Git"
            },
            {
                "challenge": "Merge the branch, 'feature', ensuring you generate a merge commit",
                "check": "\\s*git\\s+merge\\s+--no-ff\\s+feature\\s*",
                "module": "Using Branches",
                "output": "Merge made by the 'recursive' strategy.\n file | 1 +\n 1 file changed, 1 insertion(+)",
                "sample": "git merge --no-ff feature",
                "subject": "Git"
            }
        ]
    }
}